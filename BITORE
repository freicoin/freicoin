usr/bin/.sh BASH
NEGIN
LZTE
GLOW7
[VECTOR]'.(floats-&-glows) :
+#include "base58.h"
+#include "core.h"
+#include "init.h"
+#include "keystore.h"
+#include "main.h"
+#include "net.h"
+#include "rpcserver.h"
+#include "uint256.h"
+#ifdef ENABLE_WALLET
+#include "wallet.h"
+#endif
+#include <stdint.h>
+#include <boost/assign/list_of.hpp>
+#include "json/json_spirit_utils.h"
+#include "json/json_spirit_value.h"
+using namespace std;
+using namespace boost;
+using namespace boost::assign;
+using namespace json_spirit;
+void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeHex)
+{
txnouttype type;
vector addresses;
int nRequired;
out.push_back(Pair("asm", scriptPubKey.ToString()));
if (fIncludeHex)
   out.push_back(Pair("hex", HexStr(scriptPubKey.begin(), scriptPubKey.end())));
if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired))
{
   out.push_back(Pair("type", GetTxnOutputType(type)));
   return;
}
out.push_back(Pair("reqSigs", nRequired));
out.push_back(Pair("type", GetTxnOutputType(type)));
Array a;
BOOST_FOREACH(const CTxDestination& addr, addresses)
   a.push_back(CBitcoinAddress(addr).ToString());
out.push_back(Pair("addresses", a));
+}
+void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)
+{
entry.push_back(Pair("txid", tx.GetHash().GetHex()));
entry.push_back(Pair("version", tx.nVersion));
entry.push_back(Pair("locktime", (int64_t)tx.nLockTime));
Array vin;
BOOST_FOREACH(const CTxIn& txin, tx.vin)
{
   Object in;
   if (tx.IsCoinBase())
       in.push_back(Pair("coinbase", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
   else
   {
       in.push_back(Pair("txid", txin.prevout.hash.GetHex()));
       in.push_back(Pair("vout", (int64_t)txin.prevout.n));
       Object o;
       o.push_back(Pair("asm", txin.scriptSig.ToString()));
       o.push_back(Pair("hex", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
       in.push_back(Pair("scriptSig", o));
   }
   in.push_back(Pair("sequence", (int64_t)txin.nSequence));
   vin.push_back(in);
}
entry.push_back(Pair("vin", vin));
Array vout;
for (unsigned int i = 0; i < tx.vout.size(); i++)
{
   const CTxOut& txout = tx.vout[i];
   Object out;
   out.push_back(Pair("value", ValueFromAmount(txout.nValue)));
   out.push_back(Pair("n", (int64_t)i));
   Object o;
   ScriptPubKeyToJSON(txout.scriptPubKey, o, true);
   out.push_back(Pair("scriptPubKey", o));
   vout.push_back(out);
}
entry.push_back(Pair("vout", vout));
if (hashBlock != 0)
{
   entry.push_back(Pair("blockhash", hashBlock.GetHex()));
   map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
   if (mi != mapBlockIndex.end() && (*mi).second)
   {
       CBlockIndex* pindex = (*mi).second;
       if (chainActive.Contains(pindex))
       {
           entry.push_back(Pair("confirmations", 1 + chainActive.Height() - pindex->nHeight));
           entry.push_back(Pair("time", (int64_t)pindex->nTime));
           entry.push_back(Pair("blocktime", (int64_t)pindex->nTime));
       }
       else
           entry.push_back(Pair("confirmations", 0));
   }
}
+}
+Value getrawtransaction(const Array& params, bool fHelp)
+{
if (fHelp || params.size() < 1 || params.size() > 2)
   throw runtime_error(
       "getrawtransaction \"txid\" ( verbose )\n"
       "\nReturn the raw transaction data.\n"
       "\nIf verbose=0, returns a string that is serialized, hex-encoded data for 'txid'.\n"
       "If verbose is non-zero, returns an Object with information about 'txid'.\n"
       "\nArguments:\n"
       "1. \"txid\"      (string, required) The transaction id\n"
       "2. verbose       (numeric, optional, default=0) If 0, return a string, other return a json object\n"
       "\nResult (if verbose is not set or set to 0):\n"
       "\"data\"      (string) The serialized, hex-encoded data for 'txid'\n"
       "\nResult (if verbose > 0):\n"
       "{\n"
       "  \"hex\" : \"data\",       (string) The serialized, hex-encoded data for 'txid'\n"
       "  \"txid\" : \"id\",        (string) The transaction id (same as provided)\n"
       "  \"version\" : n,          (numeric) The version\n"
       "  \"locktime\" : ttt,       (numeric) The lock time\n"
       "  \"vin\" : [               (array of json objects)\n"
       "     {\n"
       "       \"txid\": \"id\",    (string) The transaction id\n"
       "       \"vout\": n,         (numeric) \n"
       "       \"scriptSig\": {     (json object) The script\n"
       "         \"asm\": \"asm\",  (string) asm\n"
       "         \"hex\": \"hex\"   (string) hex\n"
       "       },\n"
       "       \"sequence\": n      (numeric) The script sequence number\n"
       "     }\n"
       "     ,...\n"
       "  ],\n"
       "  \"vout\" : [              (array of json objects)\n"
       "     {\n"
       "       \"value\" : x.xxx,            (numeric) The value in btc\n"
       "       \"n\" : n,                    (numeric) index\n"
       "       \"scriptPubKey\" : {          (json object)\n"
       "         \"asm\" : \"asm\",          (string) the asm\n"
       "         \"hex\" : \"hex\",          (string) the hex\n"
       "         \"reqSigs\" : n,            (numeric) The required sigs\n"
       "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
       "         \"addresses\" : [           (json array of string)\n"
       "           \"bitcoinaddress\"        (string) bitcoin address\n"
       "           ,...\n"
       "         ]\n"
       "       }\n"
       "     }\n"
       "     ,...\n"
       "  ],\n"
       "  \"blockhash\" : \"hash\",   (string) the block hash\n"
       "  \"confirmations\" : n,      (numeric) The confirmations\n"
       "  \"time\" : ttt,             (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT)\n"
       "  \"blocktime\" : ttt         (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\n"
       "}\n"
       "\nExamples:\n"
       + HelpExampleCli("getrawtransaction", "\"mytxid\"")
       + HelpExampleCli("getrawtransaction", "\"mytxid\" 1")
       + HelpExampleRpc("getrawtransaction", "\"mytxid\", 1")
   );
uint256 hash = ParseHashV(params[0], "parameter 1");
bool fVerbose = false;
if (params.size() > 1)
   fVerbose = (params[1].get_int() != 0);
CTransaction tx;
uint256 hashBlock = 0;
if (!GetTransaction(hash, tx, hashBlock, true))
   throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "No information available about transaction");
CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
ssTx << tx;
string strHex = HexStr(ssTx.begin(), ssTx.end());
if (!fVerbose)
   return strHex;
Object result;
result.push_back(Pair("hex", strHex));
TxToJSON(tx, hashBlock, result);
return result;
+}
+#ifdef ENABLE_WALLET
+Value listunspent(const Array& params, bool fHelp)
+{
if (fHelp || params.size() > 3)
   throw runtime_error(
       "listunspent ( minconf maxconf  [\"address\",...] )\n"
       "\nReturns array of unspent transaction outputs\n"
       "with between minconf and maxconf (inclusive) confirmations.\n"
       "Optionally filter to only include txouts paid to specified addresses.\n"
       "Results are an array of Objects, each of which has:\n"
       "{txid, vout, scriptPubKey, amount, confirmations}\n"
       "\nArguments:\n"
       "1. minconf          (numeric, optional, default=1) The minimum confirmationsi to filter\n"
       "2. maxconf          (numeric, optional, default=9999999) The maximum confirmations to filter\n"
       "3. \"addresses\"    (string) A json array of bitcoin addresses to filter\n"
       "    [\n"
       "      \"address\"   (string) bitcoin address\n"
       "      ,...\n"
       "    ]\n"
       "\nResult\n"
       "[                   (array of json object)\n"
       "  {\n"
       "    \"txid\" : \"txid\",        (string) the transaction id \n"
       "    \"vout\" : n,               (numeric) the vout value\n"
       "    \"address\" : \"address\",  (string) the bitcoin address\n"
       "    \"account\" : \"account\",  (string) The associated account, or \"\" for the default account\n"
       "    \"scriptPubKey\" : \"key\", (string) the script key\n"
       "    \"amount\" : x.xxx,         (numeric) the transaction amount in btc\n"
       "    \"confirmations\" : n       (numeric) The number of confirmations\n"
       "  }\n"
       "  ,...\n"
       "]\n"
       "\nExamples\n"
       + HelpExampleCli("listunspent", "")
       + HelpExampleCli("listunspent", "6 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
       + HelpExampleRpc("listunspent", "6, 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
   );
RPCTypeCheck(params, list_of(int_type)(int_type)(array_type));
int nMinDepth = 1;
if (params.size() > 0)
   nMinDepth = params[0].get_int();
int nMaxDepth = 9999999;
if (params.size() > 1)
   nMaxDepth = params[1].get_int();
set setAddress;
if (params.size() > 2)
{
   Array inputs = params[2].get_array();
   BOOST_FOREACH(Value& input, inputs)
   {
       CBitcoinAddress address(input.get_str());
       if (!address.IsValid())
           throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+input.get_str());
       if (setAddress.count(address))
           throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+input.get_str());
      setAddress.insert(address);
   }
}
Array results;
vector vecOutputs;
assert(pwalletMain != NULL);
pwalletMain->AvailableCoins(vecOutputs, false);
BOOST_FOREACH(const COutput& out, vecOutputs)
{
   if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)
       continue;
   if (setAddress.size())
   {
       CTxDestination address;
       if (!ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
           continue;
       if (!setAddress.count(address))
           continue;
   }
   int64_t nValue = out.tx->vout[out.i].nValue;
   const CScript& pk = out.tx->vout[out.i].scriptPubKey;
   Object entry;
   entry.push_back(Pair("txid", out.tx->GetHash().GetHex()));
   entry.push_back(Pair("vout", out.i));
   CTxDestination address;
   if (ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
   {
       entry.push_back(Pair("address", CBitcoinAddress(address).ToString()));
       if (pwalletMain->mapAddressBook.count(address))
           entry.push_back(Pair("account", pwalletMain->mapAddressBook[address].name));
   }
   entry.push_back(Pair("scriptPubKey", HexStr(pk.begin(), pk.end())));
   if (pk.IsPayToScriptHash())
   {
       CTxDestination address;
       if (ExtractDestination(pk, address))
       {
           const CScriptID& hash = boost::get<const CScriptID&>(address);
           CScript redeemScript;
           if (pwalletMain->GetCScript(hash, redeemScript))
               entry.push_back(Pair("redeemScript", HexStr(redeemScript.begin(), redeemScript.end())));
       }
   }
   entry.push_back(Pair("amount",ValueFromAmount(nValue)));
   entry.push_back(Pair("confirmations",out.nDepth));
   results.push_back(entry);
}
return results;
+}
+#endif
+Value createrawtransaction(const Array& params, bool fHelp)
+{
if (fHelp || params.size() != 2)
   throw runtime_error(
       "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...}\n"
       "\nCreate a transaction spending the given inputs and sending to the given addresses.\n"
       "Returns hex-encoded raw transaction.\n"
       "Note that the transaction's inputs are not signed, and\n"
       "it is not stored in the wallet or transmitted to the network.\n"
       "\nArguments:\n"
       "1. \"transactions\"        (string, required) A json array of json objects\n"
       "     [\n"
       "       {\n"
       "         \"txid\":\"id\",  (string, required) The transaction id\n"
       "         \"vout\":n        (numeric, required) The output number\n"
       "       }\n"
       "       ,...\n"
       "     ]\n"
       "2. \"addresses\"           (string, required) a json object with addresses as keys and amounts as values\n"
       "    {\n"
       "      \"address\": x.xxx   (numeric, required) The key is the bitcoin address, the value is the btc amount\n"
       "      ,...\n"
       "    }\n"
       "\nResult:\n"
       "\"transaction\"            (string) hex string of the transaction\n"
       "\nExamples\n"
       + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\" \"{\\\"address\\\":0.01}\"")
       + HelpExampleRpc("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\", \"{\\\"address\\\":0.01}\"")
   );
RPCTypeCheck(params, list_of(array_type)(obj_type));
Array inputs = params[0].get_array();
Object sendTo = params[1].get_obj();
CTransaction rawTx;
BOOST_FOREACH(const Value& input, inputs)
{
   const Object& o = input.get_obj();
   uint256 txid = ParseHashO(o, "txid");
   const Value& vout_v = find_value(o, "vout");
   if (vout_v.type() != int_type)
       throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, missing vout key");
   int nOutput = vout_v.get_int();
   if (nOutput < 0)
       throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, vout must be positive");
   CTxIn in(COutPoint(txid, nOutput));
   rawTx.vin.push_back(in);
}
set setAddress;
BOOST_FOREACH(const Pair& s, sendTo)
{
   CBitcoinAddress address(s.name_);
   if (!address.IsValid())
       throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+s.name_);
   if (setAddress.count(address))
       throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+s.name_);
   setAddress.insert(address);
   CScript scriptPubKey;
   scriptPubKey.SetDestination(address.Get());
   int64_t nAmount = AmountFromValue(s.value_);
   CTxOut out(nAmount, scriptPubKey);
   rawTx.vout.push_back(out);
}
CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);
ss << rawTx;
return HexStr(ss.begin(), ss.end());
+}
+Value decoderawtransaction(const Array& params, bool fHelp)
+{
if (fHelp || params.size() != 1)
   throw runtime_error(
       "decoderawtransaction \"hexstring\"\n"
       "\nReturn a JSON object representing the serialized, hex-encoded transaction.\n"
       "\nArguments:\n"
       "1. \"hex\"      (string, required) The transaction hex string\n"
       "\nResult:\n"
       "{\n"
       "  \"txid\" : \"id\",        (string) The transaction id\n"
       "  \"version\" : n,          (numeric) The version\n"
       "  \"locktime\" : ttt,       (numeric) The lock time\n"
       "  \"vin\" : [               (array of json objects)\n"
       "     {\n"
       "       \"txid\": \"id\",    (string) The transaction id\n"
       "       \"vout\": n,         (numeric) The output number\n"
       "       \"scriptSig\": {     (json object) The script\n"
       "         \"asm\": \"asm\",  (string) asm\n"
       "         \"hex\": \"hex\"   (string) hex\n"
       "       },\n"
       "       \"sequence\": n     (numeric) The script sequence number\n"
       "     }\n"
       "     ,...\n"
       "  ],\n"
       "  \"vout\" : [             (array of json objects)\n"
       "     {\n"
       "       \"value\" : x.xxx,            (numeric) The value in btc\n"
       "       \"n\" : n,                    (numeric) index\n"
       "       \"scriptPubKey\" : {          (json object)\n"
       "         \"asm\" : \"asm\",          (string) the asm\n"
       "         \"hex\" : \"hex\",          (string) the hex\n"
       "         \"reqSigs\" : n,            (numeric) The required sigs\n"
       "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
       "         \"addresses\" : [           (json array of string)\n"
       "           \"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\"   (string) bitcoin address\n"
       "           ,...\n"
       "         ]\n"
       "       }\n"
       "     }\n"
       "     ,...\n"
       "  ],\n"
       "}\n"
       "\nExamples:\n"
       + HelpExampleCli("decoderawtransaction", "\"hexstring\"")
       + HelpExampleRpc("decoderawtransaction", "\"hexstring\"")
   );
vector txData(ParseHexV(params[0], "argument"));
CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
CTransaction tx;
try {
   ssData >> tx;
}
catch (std::exception &e) {
   throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
}
Object result;
TxToJSON(tx, 0, result);
return result;
+}
+Value decodescript(const Array& params, bool fHelp)
+{
if (fHelp || params.size() != 1)
   throw runtime_error(
       "decodescript \"hex\"\n"
       "\nDecode a hex-encoded script.\n"
       "\nArguments:\n"
       "1. \"hex\"     (string) the hex encoded script\n"
       "\nResult:\n"
       "{\n"
       "  \"asm\":\"asm\",   (string) Script public key\n"
       "  \"hex\":\"hex\",   (string) hex encoded public key\n"
       "  \"type\":\"type\", (string) The output type\n"
       "  \"reqSigs\": n,    (numeric) The required signatures\n"
       "  \"addresses\": [   (json array of string)\n"
       "     \"address\"     (string) bitcoin address\n"
       "     ,...\n"
       "  ],\n"
       "  \"p2sh\",\"address\" (string) script address\n"
       "}\n"
       "\nExamples:\n"
       + HelpExampleCli("decodescript", "\"hexstring\"")
       + HelpExampleRpc("decodescript", "\"hexstring\"")
   );
RPCTypeCheck(params, list_of(str_type));
Object r;
CScript script;
if (params[0].get_str().size() > 0){
   vector<unsigned char> scriptData(ParseHexV(params[0], "argument"));
   script = CScript(scriptData.begin(), scriptData.end());
} else {
   // Empty scripts are valid
}
ScriptPubKeyToJSON(script, r, false);
r.push_back(Pair("p2sh", CBitcoinAddress(script.GetID()).ToString()));
return r;
+}
+Value signrawtransaction(const Array& params, bool fHelp)
+{
if (fHelp || params.size() < 1 || params.size() > 4)
   throw runtime_error(
       "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )\n"
       "\nSign inputs for raw transaction (serialized, hex-encoded).\n"
       "The second optional argument (may be null) is an array of previous transaction outputs that\n"
       "this transaction depends on but may not yet be in the block chain.\n"
       "The third optional argument (may be null) is an array of base58-encoded private\n"
       "keys that, if given, will be the only keys used to sign the transaction.\n"
+#ifdef ENABLE_WALLET

       + HelpRequiringPassphrase() + "\n"
+#endif

       "\nArguments:\n"
       "1. \"hexstring\"     (string, required) The transaction hex string\n"
       "2. \"prevtxs\"       (string, optional) An json array of previous dependent transaction outputs\n"
       "     [               (json array of json objects, or 'null' if none provided)\n"
       "       {\n"
       "         \"txid\":\"id\",             (string, required) The transaction id\n"
       "         \"vout\":n,                  (numeric, required) The output number\n"
       "         \"scriptPubKey\": \"hex\",   (string, required) script key\n"
       "         \"redeemScript\": \"hex\"    (string, required) redeem script\n"
       "         \"redeemScript\": \"hex\"    (string, required for P2SH) redeem script\n"
       "       }\n"
       "       ,...\n"
       "    ]\n"
       "3. \"privatekeys\"     (string, optional) A json array of base58-encoded private keys for signing\n"
       "    [                  (json array of strings, or 'null' if none provided)\n"
       "      \"privatekey\"   (string) private key in base58-encoding\n"
       "      ,...\n"
       "    ]\n"
       "4. \"sighashtype\"     (string, optional, default=ALL) The signature hash type. Must be one of\n"
       "       \"ALL\"\n"
       "       \"NONE\"\n"
       "       \"SINGLE\"\n"
       "       \"ALL|ANYONECANPAY\"\n"
       "       \"NONE|ANYONECANPAY\"\n"
       "       \"SINGLE|ANYONECANPAY\"\n"
       "\nResult:\n"
       "{\n"
       "  \"hex\": \"value\",   (string) The raw transaction with signature(s) (hex-encoded string)\n"
       "  \"complete\": n       (numeric) if transaction has a complete set of signature (0 if not)\n"
       "}\n"
       "\nExamples:\n"
       + HelpExampleCli("signrawtransaction", "\"myhex\"")
       + HelpExampleRpc("signrawtransaction", "\"myhex\"")
   );
RPCTypeCheck(params, list_of(str_type)(array_type)(array_type)(str_type), true);
vector txData(ParseHexV(params[0], "argument 1"));
CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
vector txVariants;
while (!ssData.empty())
{
   try {
       CTransaction tx;
       ssData >> tx;
       txVariants.push_back(tx);
   }
   catch (std::exception &e) {
       throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
   }
}
if (txVariants.empty())
   throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "Missing transaction");
// mergedTx will end up with all the signatures; it
// starts as a clone of the rawtx:
CTransaction mergedTx(txVariants[0]);
bool fComplete = true;
// Fetch previous transactions (inputs):
CCoinsView viewDummy;
CCoinsViewCache view(viewDummy);
{
   LOCK(mempool.cs);
   CCoinsViewCache &viewChain = *pcoinsTip;
   CCoinsViewMemPool viewMempool(viewChain, mempool);
   view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view
   BOOST_FOREACH(const CTxIn& txin, mergedTx.vin) {
       const uint256& prevHash = txin.prevout.hash;
       CCoins coins;
       view.GetCoins(prevHash, coins); // this is certainly allowed to fail
   }
   view.SetBackend(viewDummy); // switch back to avoid locking mempool for too long
}
bool fGivenKeys = false;
CBasicKeyStore tempKeystore;
if (params.size() > 2 && params[2].type() != null_type)
{
   fGivenKeys = true;
   Array keys = params[2].get_array();
   BOOST_FOREACH(Value k, keys)
   {
       CBitcoinSecret vchSecret;
       bool fGood = vchSecret.SetString(k.get_str());
       if (!fGood)
           throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid private key");
       CKey key = vchSecret.GetKey();
       tempKeystore.AddKey(key);
   }
}
+#ifdef ENABLE_WALLET
else
   EnsureWalletIsUnlocked();
+#endif

// Add previous txouts given in the RPC call:
if (params.size() > 1 && params[1].type() != null_type)
{
   Array prevTxs = params[1].get_array();
   BOOST_FOREACH(Value& p, prevTxs)
   {
       if (p.type() != obj_type)
           throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "expected object with {\"txid'\",\"vout\",\"scriptPubKey\"}");
       Object prevOut = p.get_obj();
       RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type));
       uint256 txid = ParseHashO(prevOut, "txid");
       int nOut = find_value(prevOut, "vout").get_int();
       if (nOut < 0)
           throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "vout must be positive");
       vector<unsigned char> pkData(ParseHexO(prevOut, "scriptPubKey"));
       CScript scriptPubKey(pkData.begin(), pkData.end());
       CCoins coins;
       if (view.GetCoins(txid, coins)) {
           if (coins.IsAvailable(nOut) && coins.vout[nOut].scriptPubKey != scriptPubKey) {
               string err("Previous output scriptPubKey mismatch:\n");
               err = err + coins.vout[nOut].scriptPubKey.ToString() + "\nvs:\n"+
                   scriptPubKey.ToString();
               throw JSONRPCError(RPC_DESERIALIZATION_ERROR, err);
           }
           // what todo if txid is known, but the actual output isn't?
       }
       if ((unsigned int)nOut >= coins.vout.size())
           coins.vout.resize(nOut+1);
       coins.vout[nOut].scriptPubKey = scriptPubKey;
       coins.vout[nOut].nValue = 0; // we don't know the actual output value
       view.SetCoins(txid, coins);
       // if redeemScript given and not using the local wallet (private keys
       // given), add redeemScript to the tempKeystore so it can be signed:
       if (fGivenKeys && scriptPubKey.IsPayToScriptHash())
       {
           RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type)("redeemScript",str_type));
           Value v = find_value(prevOut, "redeemScript");
           if (!(v == Value::null))
           {
               vector<unsigned char> rsData(ParseHexV(v, "redeemScript"));
               CScript redeemScript(rsData.begin(), rsData.end());
               tempKeystore.AddCScript(redeemScript);
           }
       }
   }
}
+#ifdef ENABLE_WALLET
const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);
+#else
const CKeyStore& keystore = tempKeystore;
+#endif
int nHashType = SIGHASH_ALL;
if (params.size() > 3 && params[3].type() != null_type)
{
   static map<string, int> mapSigHashValues =
       boost::assign::map_list_of
       (string("ALL"), int(SIGHASH_ALL))
       (string("ALL|ANYONECANPAY"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY))
       (string("NONE"), int(SIGHASH_NONE))
       (string("NONE|ANYONECANPAY"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY))
       (string("SINGLE"), int(SIGHASH_SINGLE))
       (string("SINGLE|ANYONECANPAY"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY))
       ;
   string strHashType = params[3].get_str();
   if (mapSigHashValues.count(strHashType))
       nHashType = mapSigHashValues[strHashType];
   else
       throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid sighash param");
}
bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);
// Sign what we can:
for (unsigned int i = 0; i < mergedTx.vin.size(); i++)
{
   CTxIn& txin = mergedTx.vin[i];
   CCoins coins;
   if (!view.GetCoins(txin.prevout.hash, coins) || !coins.IsAvailable(txin.prevout.n))
   {
       fComplete = false;
       continue;
   }
   const CScript& prevPubKey = coins.vout[txin.prevout.n].scriptPubKey;
   txin.scriptSig.clear();
   // Only sign SIGHASH_SINGLE if there's a corresponding output:
   if (!fHashSingle || (i < mergedTx.vout.size()))
       SignSignature(keystore, prevPubKey, mergedTx, i, nHashType);
   // ... and merge in other signatures:
   BOOST_FOREACH(const CTransaction& txv, txVariants)
   {
       txin.scriptSig = CombineSignatures(prevPubKey, mergedTx, i, txin.scriptSig, txv.vin[i].scriptSig);
   }
   if (!VerifyScript(txin.scriptSig, prevPubKey, mergedTx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC, 0))
       fComplete = false;
}
Object result;
CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
ssTx << mergedTx;
result.push_back(Pair("hex", HexStr(ssTx.begin(), ssTx.end())));
result.push_back(Pair("complete", fComplete));
return result;
+}
+Value sendrawtransaction(const Array& params, bool fHelp)
+{
if (fHelp || params.size() < 1 || params.size() > 2)
   throw runtime_error(
       "sendrawtransaction \"hexstring\" ( allowhighfees )\n"
       "\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\n"
       "\nAlso see createrawtransaction and signrawtransaction calls.\n"
       "\nArguments:\n"
       "1. \"hexstring\"    (string, required) The hex string of the raw transaction)\n"
       "2. allowhighfees    (boolean, optional, default=false) Allow high fees\n"
       "\nResult:\n"
       "\"hex\"             (string) The transaction hash in hex\n"
       "\nExamples:\n"
       "\nCreate a transaction\n"
       + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\" : \\\"mytxid\\\",\\\"vout\\\":0}]\" \"{\\\"myaddress\\\":0.01}\"") +
       "Sign the transaction, and get back the hex\n"
       + HelpExampleCli("signrawtransaction", "\"myhex\"") +
       "\nSend the transaction (signed hex)\n"
       + HelpExampleCli("sendrawtransaction", "\"signedhex\"") +
       "\nAs a json rpc call\n"
       + HelpExampleRpc("sendrawtransaction", "\"signedhex\"")
   );
// parse hex string from parameter
vector txData(ParseHexV(params[0], "parameter"));
CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
CTransaction tx;
bool fOverrideFees = false;
if (params.size() > 1)
   fOverrideFees = params[1].get_bool();
// deserialize binary data stream
try {
   ssData >> tx;
}
catch (std::exception &e) {
   throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
}
uint256 hashTx = tx.GetHash();
CCoinsViewCache &view = *pcoinsTip;
CCoins existingCoins;
bool fHaveMempool = mempool.exists(hashTx);
bool fHaveChain = view.GetCoins(hashTx, existingCoins) && existingCoins.nHeight < 1000000000;
if (!fHaveMempool && !fHaveChain) {
   // push to local node and sync with wallets
   CValidationState state;
   if (AcceptToMemoryPool(mempool, state, tx, false, NULL, !fOverrideFees))
       SyncWithWallets(hashTx, tx, NULL);
   else {
       if(state.IsInvalid())
           throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf("%i: %s", state.GetRejectCode(), state.GetRejectReason()));
       else
           throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());
   }
} else if (fHaveChain) {
   throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, "transaction already in block chain");
}
RelayTransaction(txid, '+Run'' 'Runs::/Action::/:Build::/scripts::/Run-on :Runs :
+Runs :gh/pages :
+pages :edit "
+$ intuit install 
+PURL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
+run: gh pr edit "$PR_URL" --add-label "production"
+env:
+PR_URL: ${{github.event.pull_request.html_url}}
+GITHUB_TOKEN: ${{ ((c)(r)).[12753750.[00]m]'_BITORE_34173.1337) ')]}}}'"''");":,**
return hashTx.GetHex();
+}
+'require'/ ':'' 'test'' :
'- '.devcontainer/**'
'.github/actions-scripts/**'
'.github/workflows/**'
'.github/CODEOWNERS'
'assets/fonts/**'
'data/graphql/**'
'Dockerfile*'
'lib/graphql/**'
'lib/redirects/**'
'lib/rest/**'
'lib/webhooks/**'
'package*.json'
'script/**'
'content/actions/deployment/security-hardening-your-deployments/**'
Why:
Closes ISSUE

What's being changed (if available, include any code snippets, screenshots, or gifs):
Check off the following:
[22/7] I have reviewed my changes in staging (look for the "Automatically generated comment" and click the links in the "Preview" column to view your latest changes).
[22/7] For content changes, I have completed the self-review checklist.
@mowjoejoejoejoe
Update actions-run-name.yml
9fec27d
@github-actions github-actions bot added the triage Do not begin working on this issue until triaged by the team.label 3 days ago
mowjoejoejoejoe
mowjoejoejoejoe commented 2 days ago
Spammy 
Authorh-ref.1mvn.repo':'A'Sync:data={'Raven'-1.mv install/Kraven :
title :Run
Run :Runs
'ache::LRU - A Least-Recently Used cache
=head1 SYNOPSIS
    tie %cache, 'Tie::Cache::LRU', 500;
    tie %cache, 'Tie::Cache::LRU', '400k'; #UNIMPLEMENTED

    # Use like a normal hash.

    $cache_obj = tied %cache;
    $current_size = $cache_obj->curr_size;

    $max_size = $cache_obj->max_size;
    $cache_obj->max_size($new_size);


=head1 DESCRIPTION

This is an implementation of a least-recently used (LRU) cache keeping
the cache in RAM.

A LRU cache is similar to the kind of cache used by a web browser.
New items are placed into the top of the cache.  When the cache grows
past its size limit, it throws away items off the bottom.  The trick
is that whenever an item is -accessed-, it is pulled back to the top.
The end result of all this is that items which are frequently accessed
tend to stay in the cache.



=head1 AUTHOR

Michael G Schwern <schwern@pobox.com> for Arena Networks


WHAT IS THIS?

This is Tie::Cache::LRU, a perl module.  Please see the README that comes with
this distribution.

HOW DO I INSTALL IT?

To install this module, cd to the directory that contains this README
file and type the following:

   perl Makefile.PL
   make
   make test
   make install

To install this module into a specific directory, do:
   perl Makefile.PL PREFIX=/name/of/the/directory
   ...the rest is the same...

Please also read the perlmodinstall man page, if available.

WHAT MODULES DO I NEED?

    Carp::Assert
    enum
    Class::Virtual
    Class::Data::Inheritable
    Test::More
 66  
README
Marking files as viewed can help keep track of your progress, but will not affect your submitted reviewViewed
@@ -1,66 +0,0 @@
=head1 NAME	

Tie::Cache::LRU - A Least-Recently Used cache	


=head1 SYNOPSIS	

    tie %cache, 'Tie::Cache::LRU', 500;	
    tie %cache, 'Tie::Cache::LRU', '400k'; #UNIMPLEMENTED	

    # Use like a normal hash.	

    $cache_obj = tied %cache;	
    $current_size = $cache_obj->curr_size;	

    $max_size = $cache_obj->max_size;	
    $cache_obj->max_size($new_size);	


=head1 DESCRIPTION	

This is an implementation of a least-recently used (LRU) cache keeping	
the cache in RAM.	

A LRU cache is similar to the kind of cache used by a web browser.	
New items are placed into the top of the cache.  When the cache grows	
past its size limit, it throws away items off the bottom.  The trick	
is that whenever an item is -accessed-, it is pulled back to the top.	
The end result of all this is that items which are frequently accessed	
tend to stay in the cache.	



=head1 AUTHOR	

Michael G Schwern <schwern@pobox.com> for Arena Networks	


WHAT IS THIS?	

This is Tie::Cache::LRU, a perl module.  Please see the README that comes with	
this distribution.	

HOW DO I INSTALL IT?	
To install this module, cd to the directory that contains this README	
file and type the following:	
   perl Makefile.PL	
   make	
   make test	
   make install	
To install this module into a specific directory, do:	
   perl Makefile.PL PREFIX=/name/of/the/directory	
   ...the rest is the same...	
Please also read the perlmodinstall man page, if available.	
WHAT MODULES DO :trail-HITESPACE-thenedit-deployee-*\**ecex-spellcheck :.Docx :
    Carp::Assert	
    enum	
    Class::Virtual	
    Class::Data::Inheritable	
    Test::More	
Footer
© 2023 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
Form 1040-ES Payment Voucher
I I Detach Here and Mail With Your Payment
Department of the Treasury Calendar Year ' Internal Revenue Service Due
File only if you are making a payment of estimated tax by check or money order. Mail this Amount of estimated tax voucher with your check or money order payable to the 'United States Treasury.' Write your
social security number and ' Form 1040-ES' on your check or money order. Do not send you are paying by check
cash. Enclose, but do not staple or attach, your payment with this voucher. or money order. . . . . . . . . . G
1
DALLAS TX 75235-8313
50,098.
5222 BRADFORD DR
633-44-1725
INTERNAL REVENUE SERVICE
PO BOX 1300
CHARLOTTE NC 28201-1300
04/18/2023 2023
2023
REV 01/24/23 INTUIT.CG.CFP.SP 1555
ZACHRY T WOOD
633441725 BH WOOD 30 0 202312 430
 Form 1040-ES Payment Voucher
I I Detach Here and Mail With Your Payment
Department of the Treasury Calendar Year ' Internal Revenue Service Due
File only if you are making a payment of estimated tax by check or money order. Mail this Amount of estimated tax voucher with your check or money order payable to the 'United States Treasury.' Write your
social security number and ' Form 1040-ES' on your check or money order. Do not send you are paying by check
cash. Enclose, but do not staple or attach, your payment with this voucher. or money order. . . . . . . . . . G
2
DALLAS TX 75235-8313
50,098.
5222 BRADFORD DR
633-44-1725
INTERNAL REVENUE SERVICE
PO BOX 1300
CHARLOTTE NC 28201-1300
06/15/2023 2023
2023
REV 01/24/23 INTUIT.CG.CFP.SP 1555
ZACHRY T WOOD
633441725 BH WOOD 30 0 202312 430
 Form 1040-ES Payment Voucher
I I Detach Here and Mail With Your Payment
Department of the Treasury Calendar Year ' Internal Revenue Service Due
File only if you are making a payment of estimated tax by check or money order. Mail this Amount of estimated tax voucher with your check or money order payable to the 'United States Treasury.' Write your
social security number and ' Form 1040-ES' on your check or money order. Do not send you are paying by check
cash. Enclose, but do not staple or attach, your payment with this voucher. or money order. . . . . . . . . . G
3
DALLAS TX 75235-8313
50,098.
5222 BRADFORD DR
633-44-1725
INTERNAL REVENUE SERVICE
PO BOX 1300
CHARLOTTE NC 28201-1300
09/15/2023 2023
2023
REV 01/24/23 INTUIT.CG.CFP.SP 1555
ZACHRY T WOOD
633441725 BH WOOD 30 0 202312 430
 Form 1040-ES Payment Voucher
I I Detach Here and Mail With Your Payment
Department of the Treasury Calendar Year ' Internal Revenue Service Due
File only if you are making a payment of estimated tax by check or money order. Mail this Amount of estimated tax voucher with your check or money order payable to the 'United States Treasury.' Write your
social security number and ' Form 1040-ES' on your check or money order. Do not send you are paying by check
cash. Enclose, but do not staple or attach, your payment with this voucher. or money order. . . . . . . . . . G
4
DALLAS TX 75235-8313
50,098.
5222 BRADFORD DR
633-44-1725
INTERNAL REVENUE SERVICE
PO BOX 1300
CHARLOTTE NC 28201-1300
01/16/2024 2023
2023
REV 01/24/23 INTUIT.CG.CFP.SP 1555
ZACHRY T WOOD
633441725 BH WOOD 30 0 202312 430
Form 1040 U.S. Individual Income Tax Return 2022 Department of the Treasury—Internal Revenue Service
OMB No. 1545-0074 IRS Use Only—Do not write or staple in this space.
Filing Status
Check only
one box.
Single Married filing jointly Married filing separately (MFS) Head of household (HOH) Qualifying surviving
spouse (QSS)
If you checked the MFS box, enter the name of your spouse. If you checked the HOH or QSS box, enter the child’s name if the qualifying
person is a child but not your dependent:
Your first name and middle initial Last name Your social security number
If joint return, spouse’s first name and middle initial Last name Spouse’s social security number
Home address (number and street). If you have a P.O. box, see instructions. Apt. no.
City, town, or post office. If you have a foreign address, also complete spaces below. State ZIP code
Foreign country name Foreign province/state/county Foreign postal code
Presidential Election Campaign
Check here if you, or your
spouse if filing jointly, want $3
to go to this fund. Checking a
box below will not change
your tax or refund.
You Spouse
Digital
Assets
At any time during 2022, did you: (a) receive (as a reward, award, or payment for property or services); or (b) sell,
exchange, gift, or otherwise dispose of a digital asset (or a financial interest in a digital asset)? (See instructions.) Yes No
Standard
Deduction
Someone can claim: You as a dependent Your spouse as a dependent
Spouse itemizes on a separate return or you were a dual-status alien
Age/Blindness You: Were born before January 2, 1958 Are blind Spouse: Was born before January 2, 1958 Is blind
Dependents (see instructions):
If more
than four
dependents,
see instructions
and check
here . .
(2) Social security
number
(3) Relationship
to you
(4) Check the box if qualifies for (see instructions):
(1) First name Last name Child tax credit Credit for other dependents
Income
Attach Form(s)
W-2 here. Also
attach Forms
W-2G and
1099-R if tax
was withheld.
If you did not
get a Form
W-2, see
instructions.
1 a Total amount from Form(s) W-2, box 1 (see instructions) ............. 1a
b Household employee wages not reported on Form(s) W-2 ............. 1b
c Tip income not reported on line 1a (see instructions) .............. 1c
d Medicaid waiver payments not reported on Form(s) W-2 (see instructions) ........ 1d
e Taxable dependent care benefits from Form 2441, line 26 ............ 1e
f Employer-provided adoption benefits from Form 8839, line 29 ........... 1f
g Wages from Form 8919, line 6 ..................... 1g
h Other earned income (see instructions) .................. 1h
i Nontaxable combat pay election (see instructions) ....... 1i
z Add lines 1a through 1h ...................... 1z
Attach Sch. B
if required.
2a Tax-exempt interest . . . 2a b Taxable interest ..... 2b
3a Qualified dividends . . . 3a b Ordinary dividends ..... 3b
4a IRA distributions .... 4a b Taxable amount ...... 4b
5a Pensions and annuities . . 5a b Taxable amount ...... 5b
6a Social security benefits . . 6a b Taxable amount ...... 6b
c If you elect to use the lump-sum election method, check here (see instructions) .....
7 Capital gain or (loss). Attach Schedule D if required. If not required, check here ..... 7
8 Other income from Schedule 1, line 10 .................. 8
9 Add lines 1z, 2b, 3b, 4b, 5b, 6b, 7, and 8. This is your total income .......... 9
10 Adjustments to income from Schedule 1, line 26 ............... 10
11 Subtract line 10 from line 9. This is your adjusted gross income .......... 11
Standard
Deduction for—
• Single or
Married filing
separately,
$12,950
• Married filing
jointly or
Qualifying
surviving spouse,
$25,900
• Head of
household,
$19,400
• If you checked
any box under
Standard
Deduction,
see instructions.
12 Standard deduction or itemized deductions (from Schedule A) .......... 12
13 Qualified business income deduction from Form 8995 or Form 8995-A ......... 13
14 Add lines 12 and 13 ........................ 14
15 Subtract line 14 from line 11. If zero or less, enter -0-. This is your taxable income ..... 15
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040 (2022)
12,950.
12,950.
5,112,332.
WOOD 633-44-1725
5222 Bradford Dr
Dallas TX 752358313
5,125,282.
5,125,282.
5,125,282.
ZACHRY T
Form 1040 (2022) Page 2
Tax and
Credits
16 Tax (see instructions). Check if any from Form(s): 1 8814 2 4972 3 . . 16
17 Amount from Schedule 2, line 3 .................... 17
18 Add lines 16 and 17 . . . . . . . . . . . . . . . . . . . . . . . . 18
19 Child tax credit or credit for other dependents from Schedule 8812 .......... 19
20 Amount from Schedule 3, line 8 .................... 20
21 Add lines 19 and 20 ........................ 21
22 Subtract line 21 from line 18. If zero or less, enter -0- .............. 22
23 Other taxes, including self-employment tax, from Schedule 2, line 21 ......... 23
24 Add lines 22 and 23. This is your total tax ................. 24
Payments 25 Federal income tax withheld from:
a Form(s) W-2 .................. 25a
b Form(s) 1099 .................. 25b
c Other forms (see instructions) ............. 25c
d Add lines 25a through 25c ...................... 25d
26 2022 estimated tax payments and amount applied from 2021 return .......... 26 If you have a
qualifying child,
attach Sch. EIC.
27 Earned income credit (EIC) .............. 27
28 Additional child tax credit from Schedule 8812 ........ 28
29 American opportunity credit from Form 8863, line 8 ....... 29
30 Reserved for future use ............... 30
31 Amount from Schedule 3, line 15 ............ 31
32 Add lines 27, 28, 29, and 31. These are your total other payments and refundable credits . . 32
33 Add lines 25d, 26, and 32. These are your total payments ............ 33
Refund 34 If line 33 is more than line 24, subtract line 24 from line 33. This is the amount you overpaid . . 34
35a Amount of line 34 you want refunded to you. If Form 8888 is attached, check here .... 35a
Direct deposit?
See instructions.
b Routing number c Type: Checking Savings
d Account number
36 Amount of line 34 you want applied to your 2023 estimated tax ... 36
Amount
You Owe
37 Subtract line 33 from line 24. This is the amount you owe.
For details on how to pay, go to www.irs.gov/Payments or see instructions . . . . . . . . 37
38 Estimated tax penalty (see instructions) .......... 38
Third Party
Designee
Do you want to allow another person to discuss this return with the IRS? See
instructions . . . . . . . . . . . . . . . . . . . . . Yes. Complete below. No
Designee’s
name
Phone
no.
Personal identification
number (PIN)
Sign
Here
Joint return?
See instructions.
Keep a copy for
your records.
Under penalties of perjury, I declare that I have examined this return and accompanying schedules and statements, and to the best of my knowledge and
belief, they are true, correct, and complete. Declaration of preparer (other than taxpayer) is based on all information of which preparer has any knowledge.
Your signature Date Your occupation If the IRS sent you an Identity
Protection PIN, enter it here
(see inst.)
Spouse’s signature. If a joint return, both must sign. Date Spouse’s occupation If the IRS sent your spouse an
Identity Protection PIN, enter it here
(see inst.)
Phone no. Email address
Paid
Preparer
Use Only
Preparer’s name Preparer’s signature Date PTIN Check if:
Self-employed
Firm’s name Phone no.
Firm’s address Firm’s EIN
Go to www.irs.gov/Form1040 for instructions and the latest information. Form 1040 (2022)
1,854,518.
1,854,518.
X X X X X X X X X
X X X X X X X X X X X X X X X X X
 Self-Prepared
1,854,518.
44,145.
1,898,663.
(469)905-0682
A'Sync/ISSUE_TEMPLATE/LICENSE.md
1,888,138.
1,888,138.
283,372,863,602.
283,370,964,939.
283,370,964,939.
283,370,975,464.
0.
BAA REV 01/24/23 Intuit.cg.cfp.sp
SCHEDULE 1
(Form 1040) 2022 Additional Income and Adjustments to Income
Department of the Treasury
Internal Revenue Service
Attach to Form 1040, 1040-SR, or 1040-NR.
Go to www.irs.gov/Form1040 for instructions and the latest information.
OMB No. 1545-0074
Attachment
Sequence No. 01
Name(s) shown on Form 1040, 1040-SR, or 1040-NR Your social security number
Part I Additional Income
1 Taxable refunds, credits, or offsets of state and local income taxes ......... 1
2a Alimony received ........................... 2a
b Date of original divorce or separation agreement (see instructions):
3 Business income or (loss). Attach Schedule C ................. 3
4 Other gains or (losses). Attach Form 4797 .................. 4
5 Rental real estate, royalties, partnerships, S corporations, trusts, etc. Attach Schedule E . 5
6 Farm income or (loss). Attach Schedule F ................... 6
7 Unemployment compensation ....................... 7
8 Other income:
a Net operating loss ................... 8a ( )
b Gambling ...................... 8b
c Cancellation of debt .................. 8c
d Foreign earned income exclusion from Form 2555 ....... 8d ( )
e Income from Form 8853 ................. 8e
f Income from Form 8889 ................. 8f
g Alaska Permanent Fund dividends ............. 8g
h Jury duty pay ..................... 8h
i Prizes and awards ................... 8i
j Activity not engaged in for profit income ........... 8j
k Stock options ..................... 8k
l Income from the rental of personal property if you engaged in the rental
for profit but were not in the business of renting such property . . . 8l
m Olympic and Paralympic medals and USOC prize money (see
instructions) ..................... 8m
n Section 951(a) inclusion (see instructions) .......... 8n
o Section 951A(a) inclusion (see instructions) .......... 8o
p Section 461(l) excess business loss adjustment ........ 8p
q Taxable distributions from an ABLE account (see instructions) . . . 8q
r Scholarship and fellowship grants not reported on Form W-2 . . . 8r
s Nontaxable amount of Medicaid waiver payments included on Form
1040, line 1a or 1d ................... 8s ( )
t Pension or annuity from a nonqualifed deferred compensation plan or
a nongovernmental section 457 plan ............ 8t
u Wages earned while incarcerated ............. 8u
z Other income. List type and amount:
8z
9 Total other income. Add lines 8a through 8z .................. 9
10 Combine lines 1 through 7 and 9. Enter here and on Form 1040, 1040-SR, or 1040-NR, line 8 10
For Paperwork Reduction Act Notice, see your tax return instructions. Schedule 1 (Form 1040) 2022
ZACHRY T WOOD 633-44-1725
5,125,282.
5,125,282.
5,125,282.
Schedule 1 (Form 1040) 2022 Page 2
Part II Adjustments to Income
11 Educator expenses ........................... 11
12 Certain business expenses of reservists, performing artists, and fee-basis government
officials. Attach Form 2106 ........................ 12
13 Health savings account deduction. Attach Form 8889 .............. 13
14 Moving expenses for members of the Armed Forces. Attach Form 3903 ....... 14
15 Deductible part of self-employment tax. Attach Schedule SE ........... 15
16 Self-employed SEP, SIMPLE, and qualified plans ................ 16
17 Self-employed health insurance deduction .................. 17
18 Penalty on early withdrawal of savings .................... 18
19a Alimony paid ............................. 19a
b Recipient’s SSN ......................
c Date of original divorce or separation agreement (see instructions):
20 IRA deduction ............................. 20
21 Student loan interest deduction ...................... 21
22 Reserved for future use ......................... 22
23 Archer MSA deduction ......................... 23
24 Other adjustments:
a Jury duty pay (see instructions) .............. 24a
b Deductible expenses related to income reported on line 8l from the
rental of personal property engaged in for profit ........ 24b
c Nontaxable amount of the value of Olympic and Paralympic medals
and USOC prize money reported on line 8m .......... 24c
d Reforestation amortization and expenses ........... 24d
e Repayment of supplemental unemployment benefits under the Trade
Act of 1974 ...................... 24e
f Contributions to section 501(c)(18)(D) pension plans ....... 24f
g Contributions by certain chaplains to section 403(b) plans .... 24g
h Attorney fees and court costs for actions involving certain unlawful
discrimination claims (see instructions) ............ 24h
i Attorney fees and court costs you paid in connection with an award
from the IRS for information you provided that helped the IRS detect
tax law violations ................... 24i
j Housing deduction from Form 2555 ............. 24j
k Excess deductions of section 67(e) expenses from Schedule K-1 (Form
1041) ........................ 24k
z Other adjustments. List type and amount:
24z
25 Total other adjustments. Add lines 24a through 24z ............... 25
26 Add lines 11 through 23 and 25. These are your adjustments to income. Enter here and on
Form 1040 or 1040-SR, line 10, or Form 1040-NR, line 10a ............ 26
BAA REV 01/24/23 Intuit.cg.cfp.sp Schedule 1 (Form 1040) 2022
SCHEDULE 2
(Form 1040)
2022 Additional Taxes
Department of the Treasury
Internal Revenue Service
Attach to Form 1040, 1040-SR, or 1040-NR.
Go to www.irs.gov/Form1040 for instructions and the latest information.
OMB No. 1545-0074
Attachment
Sequence No. 02
Name(s) shown on Form 1040, 1040-SR, or 1040-NR Your social security number
Part I Tax
1 Alternative minimum tax. Attach Form 6251 ................ 1
2 Excess advance premium tax credit repayment. Attach Form 8962 ....... 2
3 Add lines 1 and 2. Enter here and on Form 1040, 1040-SR, or 1040-NR, line 17 . . 3
Part II Other Taxes
4 Self-employment tax. Attach Schedule SE ................. 4
5 Social security and Medicare tax on unreported tip income.
Attach Form 4137 .................. 5
6 Uncollected social security and Medicare tax on wages. Attach
Form 8919 ..................... 6
7 Total additional social security and Medicare tax. Add lines 5 and 6 ...... 7
8 Additional tax on IRAs or other tax-favored accounts. Attach Form 5329 if required.
If not required, check here ..................... 8
9 Household employment taxes. Attach Schedule H ............. 9
10 Repayment of first-time homebuyer credit. Attach Form 5405 if required ..... 10
11 Additional Medicare Tax. Attach Form 8959 ................ 11
12 Net investment income tax. Attach Form 8960 ............... 12
13 Uncollected social security and Medicare or RRTA tax on tips or group-term life
insurance from Form W-2, box 12 .................... 13
14 Interest on tax due on installment income from the sale of certain residential lots
and timeshares ............................ 14
15 Interest on the deferred tax on gain from certain installment sales with a sales price
over $150,000 ............................ 15
16 Recapture of low-income housing credit. Attach Form 8611 .......... 16
(continued on page 2)
For Paperwork Reduction Act Notice, see your tax return instructions. Schedule 2 (Form 1040) 2022
ZACHRY T WOOD 633-44-1725
44,145.
Schedule 2 (Form 1040) 2022 Page 2
Part II Other Taxes (continued)
17 Other additional taxes:
a Recapture of other credits. List type, form number, and amount:
17a
b Recapture of federal mortgage subsidy, if you sold your home
see instructions ................... 17b
c Additional tax on HSA distributions. Attach Form 8889 .... 17c
d Additional tax on an HSA because you didn’t remain an eligible
individual. Attach Form 8889 .............. 17d
e Additional tax on Archer MSA distributions. Attach Form 8853 . 17e
f Additional tax on Medicare Advantage MSA distributions. Attach
Form 8853 ..................... 17f
g Recapture of a charitable contribution deduction related to a
fractional interest in tangible personal property ....... 17g
h Income you received from a nonqualified deferred compensation
plan that fails to meet the requirements of section 409A . . . 17h
i Compensation you received from a nonqualified deferred
compensation plan described in section 457A ....... 17i
j Section 72(m)(5) excess benefits tax ........... 17j
k Golden parachute payments .............. 17k
l Tax on accumulation distribution of trusts ......... 17l
m Excise tax on insider stock compensation from an expatriated
corporation ..................... 17m
n Look-back interest under section 167(g) or 460(b) from Form
8697 or 8866 .................... 17n
o Tax on non-effectively connected income for any part of the
year you were a nonresident alien from Form 1040-NR .... 17o
p Any interest from Form 8621, line 16f, relating to distributions
from, and dispositions of, stock of a section 1291 fund .... 17p
q Any interest from Form 8621, line 24 ........... 17q
z Any other taxes. List type and amount:
17z
18 Total additional taxes. Add lines 17a through 17z .............. 18
19 Reserved for future use ........................ 19
20 Section 965 net tax liability installment from Form 965-A . . . 20
21 Add lines 4, 7 through 16, and 18. These are your total other taxes. Enter here and
on Form 1040 or 1040-SR, line 23, or Form 1040-NR, line 23b ......... 21
Schedule 2 (Form 1040) 2022
44,145.
BAA REV 01/24/23 Intuit.cg.cfp.sp
Form 8959
Department of the Treasury
Internal Revenue Service
Additional Medicare Tax
If any line does not apply to you, leave it blank. See separate instructions.
Attach to Form 1040, 1040-SR, 1040-NR, 1040-PR, or 1040-SS.
Go to www.irs.gov/Form8959 for instructions and the latest information.
OMB No. 1545-0074
2022
Attachment
Sequence No. 71
Name(s) shown on return Your social security number
Part I Additional Medicare Tax on Medicare Wages
1 Medicare wages and tips from Form W-2, box 5. If you have more than one
Form W-2, enter the total of the amounts from box 5 ........ 1
2 Unreported tips from Form 4137, line 6 ............. 2
3 Wages from Form 8919, line 6 ................ 3
4 Add lines 1 through 3 . . . . . . . . . . . . . . . . . . . 4
5 Enter the following amount for your filing status:
Married filing jointly ............... $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 5
6 Subtract line 5 from line 4. If zero or less, enter -0- . . . . . . . . . . . . . . . . . 6
7 Additional Medicare Tax on Medicare wages. Multiply line 6 by 0.9% (0.009). Enter here and go to
Part II ................................ 7
Part II Additional Medicare Tax on Self-Employment Income
8 Self-employment income from Schedule SE (Form 1040), Part I, line 6. If you
had a loss, enter -0- (Form 1040-PR or 1040-SS filers, see instructions.) . . 8
9 Enter the following amount for your filing status:
Married filing jointly................ $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 9
10 Enter the amount from line 4 ................ 10
11 Subtract line 10 from line 9. If zero or less, enter -0- ......... 11
12 Subtract line 11 from line 8. If zero or less, enter -0- ................. 12
13 Additional Medicare Tax on self-employment income. Multiply line 12 by 0.9% (0.009). Enter here and
go to Part III .............................. 13
Part III Additional Medicare Tax on Railroad Retirement Tax Act (RRTA) Compensation
14 Railroad retirement (RRTA) compensation and tips from Form(s) W-2, box 14
(see instructions) . . . . . . . . . . . . . . . . . . . . 14
15 Enter the following amount for your filing status:
Married filing jointly ............... $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 15
16 Subtract line 15 from line 14. If zero or less, enter -0- ................ 16
17 Additional Medicare Tax on railroad retirement (RRTA) compensation. Multiply line 16 by 0.9% (0.009).
Enter here and go to Part IV ......................... 17
Part IV Total Additional Medicare Tax
18 Add lines 7, 13, and 17. Also include this amount on Schedule 2 (Form 1040), line 11 (Form 1040-PR
or 1040-SS filers, see instructions), and go to Part V ................. 18
Part V Withholding Reconciliation
19 Medicare tax withheld from Form W-2, box 6. If you have more than one Form
W-2, enter the total of the amounts from box 6 .......... 19
20 Enter the amount from line 1 ................ 20
21 Multiply line 20 by 1.45% (0.0145). This is your regular Medicare tax
withholding on Medicare wages ............... 21
22 Subtract line 21 from line 19. If zero or less, enter -0-. This is your Additional Medicare Tax
withholding on Medicare wages ....................... 22
23 Additional Medicare Tax withholding on railroad retirement (RRTA) compensation from Form W-2, box
14 (see instructions) ........................... 23
24 Total Additional Medicare Tax withholding. Add lines 22 and 23. Also include this amount with
federal income tax withholding on Form 1040, 1040-SR, or 1040-NR, line 25c (Form 1040-PR or
1040-SS filers, see instructions) ....................... 24
For Paperwork Reduction Act Notice, see your tax return instructions. Form 8959 (2022)
0.
0.
ZACHRY T WOOD 633-44-1725
44,145.
200,000.
5,105,000.
5,105,000.
4,905,000.
44,145.
74,023.
0.
5,105,000.
BAA REV 01/24/23 Intuit.cg.cfp.sp
Form 8960
Department of the Treasury
Internal Revenue Service
Net Investment Income Tax—
Individuals, Estates, and Trusts
Attach to your tax return.
Go to www.irs.gov/Form8960 for instructions and the latest information.
OMB No. 1545-2227
2022
Attachment
Sequence No. 72
Name(s) shown on your tax return Your social security number or EIN
Part I Investment Income Section 6013(g) election (see instructions)
Section 6013(h) election (see instructions)
Regulations section 1.1411-10(g) election (see instructions)
1 Taxable interest (see instructions) . . . . . . . . . . . . . . . . . . . . . . . 1
2 Ordinary dividends (see instructions) ...................... 2
3 Annuities (see instructions) ......................... 3
4 a Rental real estate, royalties, partnerships, S corporations, trusts, etc. (see
instructions) ...................... 4a
b Adjustment for net income or loss derived in the ordinary course of a nonsection 1411 trade or business (see instructions) .......... 4b
c Combine lines 4a and 4b .......................... 4c
5a Net gain or loss from disposition of property (see instructions) ..... 5a
b Net gain or loss from disposition of property that is not subject to net
investment income tax (see instructions) ............ 5b
c Adjustment from disposition of partnership interest or S corporation stock (see
instructions) ...................... 5c
d Combine lines 5a through 5c ........................ 5d
6 Adjustments to investment income for certain CFCs and PFICs (see instructions) ....... 6
7 Other modifications to investment income (see instructions) .............. 7
8 Total investment income. Combine lines 1, 2, 3, 4c, 5d, 6, and 7 ............. 8
Part II Investment Expenses Allocable to Investment Income and Modifications
9a Investment interest expenses (see instructions) .......... 9a
b State, local, and foreign income tax (see instructions) ........ 9b
c Miscellaneous investment expenses (see instructions) ........ 9c
d Add lines 9a, 9b, and 9c .......................... 9d
10 Additional modifications (see instructions) .................... 10
11 Total deductions and modifications. Add lines 9d and 10 ............... 11
Part III Tax Computation
12 Net investment income. Subtract Part II, line 11, from Part I, line 8. Individuals, complete lines 13–17.
Estates and trusts, complete lines 18a–21. If zero or less, enter -0- ............ 12
Individuals:
13 Modified adjusted gross income (see instructions) ......... 13
14 Threshold based on filing status (see instructions) ......... 14
15 Subtract line 14 from line 13. If zero or less, enter -0- ........ 15
16 Enter the smaller of line 12 or line 15 ...................... 16
17 Net investment income tax for individuals. Multiply line 16 by 3.8% (0.038). Enter here and include
on your tax return (see instructions) ...................... 17
Estates and Trusts:
18a Net investment income (line 12 above) ............. 18a
b Deductions for distributions of net investment income and deductions under
section 642(c) (see instructions) ............... 18b
c Undistributed net investment income. Subtract line 18b from line 18a (see
instructions). If zero or less, enter -0- ............. 18c
19a Adjusted gross income (see instructions) ............ 19a
b Highest tax bracket for estates and trusts for the year (see instructions) . . 19b
c Subtract line 19b from line 19a. If zero or less, enter -0- ....... 19c
20 Enter the smaller of line 18c or line 19c ..................... 20
21 Net investment income tax for estates and trusts. Multiply line 20 by 3.8% (0.038). Enter here and
include on your tax return (see instructions) ................... 21
For Paperwork Reduction Act Notice, see your tax return instructions. Form 8960 (2022)
200,000.
4,925,282.
0.
0.
0.
ZACHRY T WOOD 633-44-1725
5,125,282.
BAA REV 01/24/23 Intuit.cg.cfp.sp
DO NOT MAIL THIS FORM TO THE FTB
FTB 8453-OL 2022
Date Accepted
California Online e-file Return Authorization
for Individuals
FORM
8453-OL
TAXABLE YEAR
2022
Part I Tax Return Information (whole dollars only)
 1 California adjusted gross income. See instructions ...............................................1
 2 Refund or no amount due. See instructions .....................................................2
 3 Amount you owe. See instructions ............................................................3
Part II Settle Your Account Electronically for Taxable Year 2022 (Pay by 4/18/2023)
 4 □ Direct deposit of refund
 5 □ Electronic funds withdrawal 5a Amount 5b Withdrawal date (mm/dd/yyyy)
Part III Make Estimated Tax Payments for Taxable Year 2023 These are NOT installment payments for the current amount you owe.
Part IV Banking Information (Have you verified your banking information?)
 8 Amount of refund to be directly deposited
to account below
 9 Routing number
10 Account number
11 Type of account: □ Checking □ Savings
12 The remaining amount of my refund
for direct deposit
13 Routing number
14 Account number
15 Type of account: □ Checking □ Savings
Part V Declaration of Taxpayer(s)
I authorize my account to be settled as designated in Part II. If I check Part II, box 4, I declare that the direct deposit refund information in
Part IV agrees with the authorization stated on my return. If I check Part II, box 5, I authorize an electronic funds withdrawal for the amount
listed on line 5a and any estimated payment amounts listed on line 6 from the bank account listed on lines 9, 10, and 11. If I have filed a
joint return, this is an irrevocable appointment of the other spouse/registered domestic partner (RDP) as an agent to receive the refund or
authorize an electronic funds withdrawal.
Under penalties of perjury, I declare that the information I provided to the Franchise Tax Board (FTB), either directly or through e-file
software, including my name, address, and social security number (SSN) or individual taxpayer identification number (ITIN), and the
amounts shown in Part I above, agrees with the information and amounts shown on the corresponding lines of my 2022 California income
tax return. To the best of my knowledge and belief, my return is true, correct, and complete. If I am filing a balance due return, I understand
that if the FTB does not receive full and timely payment of my tax liability, I remain liable for the tax liability and all applicable interest and
penalties. I authorize my return and accompanying schedules and statements to be transmitted to the FTB directly or through the e-file
software. If the processing of my return or refund is delayed, I authorize the FTB to disclose to me, either directly or through the e-file
software, the reason(s) for the delay or the date when the refund was sent.
Sign
Here Your signature Date
Spouse’s/RDP’s signature. If filing jointly, both must sign.
It is unlawful to forge a spouse’s/RDP’s signature.
Date
For Privacy Notice, get FTB 1131 EN-SP.
Your first name and initial Last name Suffix Your SSN or I T I N
If filing jointly, spouse’s/RDP’s first name and initial Last name Suffix Spouse’s/RDP’s SSN or ITIN
Street address (number and street) or PO box Apt. no./ste. no. PMB/private mailbox Daytime telephone number
City State ZIP code
Foreign country name Foreign province/state/county Foreign postal code
First Payment
4/18/2023
Second Payment
6/15/2023
Third Payment
9/15/2023
Fourth Payment
1/16/2024
 6 Amount
 7 Withdrawal date
ZACHRY T WOOD 633-44-1725
5222 BRADFORD DR (469)905-0682
DALLAS TX 75235-8313
0
175
REV 01/24/23 INTUIT.CG.CFP.SP
3131224 Form 540NR 2022 Side 1
●
● ● ●
●
Filing Status
6 If someone can claim you (or your spouse/RDP) as a dependent, check the box here. See instr. ...... 6
Exemptions
▶ For line 7, line 8, line 9, and line 10: Multiply the number you enter in the box by the pre-printed dollar amount for that line.
Whole dollars only 7 Personal: If you checked box 1, 3, or 4 above, enter 1 in the box. If you
checked box 2 or 5, enter 2. If you checked the box on line 6, see instructions. 7 X $140 =
X $140 =
X $140 =
$
$
$
8 Blind: If you (or your spouse/RDP) are visually impaired, enter 1;
if both are visually impaired, enter 2 .................................. 8
9 Senior: If you (or your spouse/RDP) are 65 or older, enter 1;
if both are 65 or older, enter 2. See instructions. ......................... 9
10 Dependents: Do not include yourself or your spouse/RDP.
Dependent 1 Dependent 2 Dependent 3
First Name
Last Name
SSN. See
instructions.
Dependent's
relationship
to you
California Nonresident or Part-Year
Resident Income Tax Return
1 Single
2
3
Married/RDP filing jointly. See instr.
Married/RDP filing separately.
4 Head of household (with qualifying person). See instructions.
5
If your California filing status is different from your federal filing status, check the box here ..............
Enter spouse’s/RDP’s SSN or ITIN above and full name here
See instructions.
TAXABLE YEAR
2022
CALIFORNIA FORM
540NR
Total dependent exemptions ...................................... ● 10 X $433 = $
Qualifying surviving spouse/RDP. Enter year spouse/RDP died.
APE ATTACH FEDERAL RETURN
1 140
633-44-1725 WOOD 22
ZACHRY T WOOD
5222 BRADFORD DR
DALLAS TX 75235-8313
10-15-1994
REV 01/24/23 INTUIT.CG.CFP.SP
175
Side 2 Form 540NR 2022 3132224
●
●
●
●
●
●● ●
● ● ●
●
●
●
●
●
●
●
●
11 Exemption amount: Add line 7 through line 10 ....................................... 11 $
Total Taxable Income
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
12 Total California wages from your federal
Form(s) W-2, box 16 ........................ 12
13 Enter federal AGI from federal Form 1040, 1040-SR, or 1040-NR, line 11 .............. 13
14 California adjustments – subtractions. Enter the amount from Schedule CA (540NR),
Part II, line 27, column B ................................................... 14
15 Subtract line 14 from line 13. If less than zero, enter the result in parentheses.
See instructions .......................................................... 15
16 California adjustments – additions. Enter the amount from Schedule CA (540NR), Part II,
line 27, column C ......................................................... 16
17
32
35
37
40
42
51
52
53
50
41
39
36
38
18
19
Adjusted gross income from all sources. Combine line 15 and line 16.................
CA adjusted gross income from Schedule CA
(540NR), Part IV, line 1. ...................
CA Taxable Income from Schedule CA (540NR), Part IV, line 5.......................
CA Tax Before Exemption Credits. Multiply line 35 by line 36 ........................
CA Regular Tax Before Credits. Subtract line 39 from line 37. If less than zero, enter -0-. . .
Add line 40 and line 41 .....................................................
Credit for joint custody head of household.
See instructions ..........................
Credit for dependent parent. See instructions....
Credit for senior head of household.
See instructions. ..........................
Nonrefundable Child and Dependent Care Expenses Credit. See instructions.
Attach form FTB 3506......................................................
Tax. See instructions. Check the box if from:
CA Prorated Exemption Credits. Multiply line 11 by line 38.
If the amount on line 13 is more than $229,908, see instructions ....................
CA Tax Rate. Divide line 31 by line 19 .......................
CA Exemption Credit Percentage. Divide line 35 by line 19.
If more than 1, enter 1.0000...............................
Enter the larger of: Your California itemized deductions from Schedule CA (540NR),
Part III, line 30; OR Your California standard deduction. See instructions ..............
Subtract line 18 from line 17. This is your total taxable income. If less than zero,
enter -0- ...............................................................
17
32
35
37
40
42
51
52
53
50
41
39
36
38
18
19
CA Taxable Income
31 Tax. Check the box if from: Tax Table Tax Rate Schedule
FTB 3800 FTB 3803 ................ 31
Schedule G-1 FTB 5870A
Special Credits
54 Credit percentage. Enter the amount from line 38 here.
If more than 1, enter 1.0000. See instructions ................ 54
55 Credit amount. See instructions .............................................. 55 . 00
Your name: Your SSN or ITIN: WOOD
5125282
290943344071
-290938218789
-290938218789
633-44-1725
140
5202
0
0
0.0000
0
0.0000
0
0
0
0
REV 01/24/23 INTUIT.CG.CFP.SP
175
3133224 Form 540NR 2022 Side 3
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
Special Credits continued
.
.
.
.
.
.
00
00
00
00
00
00
60 To claim more than two credits. See instructions..................................
61 Nonrefundable Renter’s Credit. See instructions ..................................
62 Add line 50 and line 55 through 61. These are your total credits ......................
63 Subtract line 62 from line 42. If less than zero, enter -0- ............................
58 Enter credit name
59 Enter credit name
60
61
62
63
58
59
code
code
and amount. . .
and amount. . .
Other Taxes
.
.
.
.
00
00
00
00
71 Alternative Minimum Tax. Attach Schedule P (540NR)..............................
72 Mental Health Services Tax. See instructions .....................................
73 Other taxes and credit recapture. See instructions .................................
74 Add line 63, line 71, line 72, and line 73. This is your total tax........................
71
72
73
74
Payments
.
.
.
.
.
.
.
.
.
.
.
00
00
00
00
00
00
00
00
00
00
81 California income tax withheld. See instructions ..................................
82 2022 CA estimated tax and other payments. See instructions ........................
83 Withholding (Form 592-B and/or Form 593). See instructions........................
84 Excess SDI (or VPDI) withheld. See instructions ..................................
85 Earned Income Tax Credit (EITC). See instructions ................................
88 Add line 81 through line 87. These are your total payments. See instructions ............
 Individual Shared Responsibility (ISR) Penalty. See instructions .......
92 Payments after Individual Shared Responsibility Penalty. If line 88 is more than line 91,
subtract line 91 from line 88..................................................
93 Individual Shared Responsibility Penalty Balance. If line 91 is more than line 88,
subtract line 88 from line 91..................................................
86 Young Child Tax Credit (YCTC). See instructions ..................................
87 Foster Youth Tax Credit (FYTC). See instructions . .................................
81
82
83
84
85
88
91
92
93
86
87
.
.
00
00
101 Overpaid tax. If line 92 is more than line 74, subtract line 74 from line 92...............
102 Amount of line 101 you want applied to your 2023 estimated tax .....................
101
102
Your name: Your SSN or ITIN:
91 If you and your household had full-year health care coverage, check the box.
See instructions. Medicare Part A or C coverage is qualifying health care coverage. ........ ●
If you did not check the box, see instructions.
ISR Penalty
●
Overpaid Tax/Tax Due
● 00
103 Overpaid tax available this year. Subtract line 102 from line 101 ...................... ● 103 . 00
WOOD 633-44-1725
0
0
0
0
REV 01/24/23 INTUIT.CG.CFP.SP
175
Side 4 Form 540NR 2022 3134224
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
00
California Peace Officer Memorial Foundation Voluntary Tax Contribution Fund..........
Keep Arts in Schools Voluntary Tax Contribution Fund .............................
California Sea Otter Voluntary Tax Contribution Fund ..............................
Suicide Prevention Voluntary Tax Contribution Fund ..............................
California Cancer Research Voluntary Tax Contribution Fund . . . . . . . . . . . . . . . . . . . . . . . .
Prevention of Animal Homelessness and Cruelty Voluntary Tax Contribution Fund .......
California Breast Cancer Research Voluntary Tax Contribution Fund...................
School Supplies for Homeless Children Voluntary Tax Contribution Fund ..............
California Senior Citizen Advocacy Voluntary Tax Contribution Fund ..................
California Firefighters’ Memorial Voluntary Tax Contribution Fund ....................
State Parks Protection Fund/Parks Pass Purchase . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
Native California Wildlife Rehabilitation Voluntary Tax Contribution Fund...............
Emergency Food for Families Voluntary Tax Contribution Fund ......................
Protect Our Coast and Oceans Voluntary Tax Contribution Fund......................
Rape Kit Backlog Voluntary Tax Contribution Fund ................................
Add amounts in code 400 through code 446. This is your total contribution ............
408
425
410
444
413
431
405
422
438
406
423
439
407
424
440
120 120
Contributions
Your name: Your SSN or ITIN:
Code Amount
●
●
●
.
.
.
00
00
00
California Seniors Special Fund. See instructions .................................
Alzheimer’s Disease and Related Dementia Voluntary Tax Contribution Fund ............
Rare and Endangered Species Preservation Voluntary Tax Contribution Program ........
400
401
403
104 Tax due. If line 92 is less than line 74, subtract line 92 from line 74 ................... 104 . 00
Mental Health Crisis Prevention Voluntary Tax Contribution Fund. .....................
California Community and Neighborhood Tree Voluntary Tax Contribution Fund ..........
445
446
●
●
● . 00
121 AMOUNT YOU OWE. Add line 93, line 104, and line 120. See instructions. Do not send cash.
Mail to: FRANCHISE TAX BOARD, PO BOX 942867, SACRAMENTO CA 94267-0001. . . . . 121
Amount
You Owe
Pay Online – Go to ftb.ca.gov/pay for more information.
WOOD 633-44-1725
REV 01/24/23 INTUIT.CG.CFP.SP
175
3135224 Form 540NR 2022 Side 5
●
●
●
●
●
●
●
●
● ●
● ●
● ● ●
Your name: Your SSN or ITIN:
.
.
.
00
00
00
122
124
123
Interest, late return penalties, and late payment penalties...........................
Total amount due. See instructions. Enclose, but do not staple, any payment ...........
Underpayment of estimated tax.
Check the box:
122
124
FTB 5805 attached FTB 5805F attached ........... 123
Interest and
Penalties Refund and Direct Deposit
.
.
.
00
00
00
125 REFUND OR NO AMOUNT DUE. Subtract line 120 from line 103. See instructions.
125
126
127
Mail to: FRANCHISE TAX BOARD, PO BOX 942840, SACRAMENTO CA 94240-0001......
Fill in the information to authorize direct deposit of your refund into one or two accounts. Do not attach a voided check or a deposit slip.
See instructions. Have you verified the routing and account numbers? Use whole dollars only.
All or the following amount of my refund (line 125) is authorized for direct deposit into the account shown below:
Routing number
Routing number
Type
Type
Checking
Checking
Savings
Savings
Account number
Account number
Direct deposit amount
Direct deposit amount
The remaining amount of my refund (line 125) is authorized for direct deposit into the account shown below:
IMPORTANT: Attach a copy of your complete federal return.
Our privacy notice can be found in annual tax booklets or online. Go to ftb.ca.gov/privacy to learn about our privacy policy statement, or go to ftb.ca.gov/forms and search for 1131
to locate FTB 1131 EN-SP, Franchise Tax Board Privacy Notice on Collection. To request this notice by mail, call 800.338.0505 and enter form code 948 when instructed.
Under penalties of perjury, I declare that I have examined this tax return, including accompanying schedules and statements, and to the best of my
knowledge and belief, it is true, correct, and complete.
Sign
Here
It is unlawful
to forge a
spouse’s/
RDP’s
signature.
Joint tax
return?
See
instructions.
Your signature Date Spouse’s/RDP’s signature (if a joint tax return, both must sign)
Your email address. Enter only one email address.
Print Third Party Designee’s Name
Firm’s name (or yours, if self-employed)
Firm’s address
Paid preparer’s signature (declaration of preparer is based on all information of which preparer has any knowledge)
Preferred phone number
Telephone Number
PTIN
Firm’s FEIN
Do you want to allow another person to discuss this tax return with us? See instructions...... Yes No
Voter
Info.
For voter registration information, check the box and go to sos.ca.gov/elections. See instructions ................
WOOD
4699050682
SELF-PREPARED
633-44-1725
0
REV 01/24/23 INTUIT.CG.CFP.SP
175
7741224 Schedule CA (540NR) 2022 Side 1
California Adjustments —
Nonresidents or Part-Year Residents
Important: Attach this schedule behind Form 540NR, Side 5 as a supporting California schedule.
Part I Residency Information. Complete all lines that apply to you and your spouse/RDP for taxable year 2022.
During 2022:
1 My California (CA) Residency (Check one)
a Myself: Nonresident Part-Year Resident Resident b Spouse: Nonresident Part-Year Resident Resident
Yourself Spouse/RDP
2 a I was domiciled in (enter two letter code, see instructions) ........................
b I was in the military and stationed in (enter two letter code) ........................
3 I became a CA resident (enter state of prior residence and date (mm/dd/yyyy) of move) . . . / / / /
4 I became a CA nonresident (enter new state of residence and date (mm/dd/yyyy) of move) . / / / /
5 I was a CA nonresident the entire year (enter state of residence) ......................
6 The number of days I spent in CA for any purpose was: ............................
7 I owned a home/property in CA (enter Y for Yes, N for No) ..........................
8 Before 2022: I was a CA resident for the period of ................................ / / – / / –
 / / / /
1 a Total amount from federal Form(s) W-2,
 box 1. See instructions .............. 1a
b Household employee wages not reported
 on federal Form(s) W-2 .............. 1b
c Tip income not reported on line 1a. .... 1c
d Medicaid waiver payments not reported
 on federal Form(s) W-2. See instr.. ..... 1d
e Taxable dependent care benefits from
 federal Form 2441, line 26 ........... 1e
f Employer-provided adoption benefits
 from federal Form 8839, line 29 ....... 1f
g Wages from federal Form 8919, line 6 . . 1g
h Other earned income. See instructions . . 1h
i Nontaxable combat pay election.
 See instructions ................... 1i
z Add line 1a through line 1i ........... 1z
2 Taxable interest. a . . 2b
3 Ordinary dividends. See instructions.
a . . . . . . . . . . . . 3b
4 IRA distributions. See instructions.
a . . . . . . . . . . . . 4b
5 Pensions and annuities. See
instructions. a . . . 5b
6 Social security benefits.
a . . . . . . . . . . . . 6b
7 Capital gain or (loss). See instructions . . . 7

Part II Income Adjustment Schedule A
Federal Amounts
(taxable amounts from
your federal tax return)
B
Subtractions
See instructions
(difference between
CA & federal law)
C
Additions
See instructions
(difference between
CA & federal law)
D
Total Amounts
Using CA Law
As If You Were a
CA Resident
(subtract col. B from
col. A; add col. C
to the result)
E
CA Amounts
(income earned or
received as a CA
resident and income
earned or received
from CA sources
as a nonresident)
SCHEDULE
CA (540NR)
TAXABLE YEAR
2022
Name(s) as shown on tax return SSN or ITIN
For Privacy Notice, get FTB 1131 EN-SP.
Section A — Income
 from federal Form 1040 or 1040-SR
ZACHRY T WOOD 633441725
T X
T X
Y
0
REV 01/24/23 INTUIT.CG.CFP.SP
175
Side 2 Schedule CA (540NR) 2022 7742224
 1 Taxable refunds, credits, or offsets of state
and local income taxes ................ 1
 2a Alimony received. See instructions. . . . 2a
 3 Business income or (loss). See instructions. . 3
 4 Other gains or (losses) ............... 4
 5 Rental real estate, royalties, partnerships,
S corporations, trusts, etc ............. 5
 6 Farm income or (loss) ................ 6
 7 Unemployment compensation .......... 7
 8 Other income:
a Federal net operating loss .......... 8a ( )
b Gambling ....................... 8b
c Cancellation of debt ............... 8c
d Foreign earned income exclusion
from federal Form 2555............ 8d ( )
e Income from federal Form 8853 ..... 8e
f Income from federal Form 8889 ..... 8f
g Alaska Permanent Fund dividends .... 8g
h Jury duty pay.................... 8h
i Prizes and awards ................ 8i
j Activity not engaged in for profit income . . 8j
k Stock options.................... 8k
l Income from the rental of personal
property if you engaged in the rental
for profit but were not in the business
of renting such property ........... 8l
m Olympic and Paralympic medals
 and USOC prize money ............ 8m
n IRC Section 951(a) inclusion ........ 8n
o IRC Section 951A(a) inclusion....... 8o
p IRC Section 461(l) excess business
loss adjustment .................. 8p
q Taxable distributions from an ABLE
account ........................ 8q
r Scholarship and fellowship grants
 not reported on federal
 Form(s) W-2. .................... 8r
s Nontaxable amount of Medicaid
 waiver payments included on federal
 Form 1040, line 1a or line 1d........ 8s ( )
t Pension or annuity from a
 nonqualified deferred compensation
 plan or a nongovernmental IRC
 Section 457 plan ................. 8t
u Wages earned while incarcerated..... 8u
z Other income. List type and amount.
 9 a Total other income. Add line 8a
through line 8z................... 9a
Section B — Additional Income
 from federal Schedule 1 (Form 1040)
A
Federal Amounts
(taxable amounts from
your federal tax return)
B
Subtractions
See instructions
(difference between
CA & federal law)
C
Additions
See instructions
(difference between
CA & federal law)
D
Total Amounts
Using CA Law
As If You Were a
CA Resident
(subtract col. B from
col. A; add col. C
to the result)
E
CA Amounts
(income earned or
received as a CA
resident and income
earned or received
from CA sources
as a nonresident)
8z
5125282
5125282
290943344071 -290943344071
290943344071 -290943344071
SEE 8z STMT
REV 01/24/23 INTUIT.CG.CFP.SP
175
7743224 Schedule CA (540NR) 2022 Side 3
b1 Disaster loss deduction from form
FTB 3805V .................... 9b1
b2 NOL deduction from form
FTB 3805V .................... 9b2
b3 NOL from form FTB 3805Z,
FTB 3807, or FTB 3809 .......... 9b3
10 Total. Combine Section A, line 1z through
line 7, and Section B, line 1 through
line 7, line 9a and line 9b1 through line 9b3
(as applicable) in each column.
See instructions. Go to Section C ....... 10
11 Educator expenses .................. 11
12 Certain business expenses of reservists,
performing artists, and fee-basis
government officials ................ 12
13 Health savings account deduction ...... 13
14 Moving expenses. Attach form FTB 3913.
See instructions .................... 14
15 Deductible part of self-employment tax.
See instructions. ................... 15
16 Self-employed SEP, SIMPLE, and
qualified plans ..................... 16
17 Self-employed health insurance deduction.
See instructions. ................... 17
18 Penalty on early withdrawal of savings . . 18
19 a Alimony paid. b Enter recipient’s:
SSN – –
Last name 19a
20 IRA deduction ..................... 20
21 Student loan interest deduction ........ 21
22 Reserved for future use .............. 22
23 Archer MSA deduction ............... 23
24 Other adjustments:
a Jury duty pay ................... 24a
b Deductible expenses related to income
reported on line 8l from the rental of
personal property engaged in for
profit.......................... 24b
c Nontaxable amount of the value of
Olympic and Paralympic medals and
USOC prize money reported on line 8m 24c
d Reforestation amortization and
expenses....................... 24d
e Repayment of supplemental
unemployment benefits under the
federal Trade Act of 1974 .......... 24e
f Contributions to IRC
Section 501(c)(18)(D) pension plans. . 24f
g Contributions by certain chaplains to
IRC Section 403(b) plans .......... 24g
h Attorney fees and court costs for
actions involving certain unlawful
discrimination claims ............. 24h
Section B — Additional Income
 Continued
Section C — Adjustments to Income
 from federal Schedule 1 (Form 1040)
A
Federal Amounts
(taxable amounts from
your federal tax return)
B
Subtractions
See instructions
(difference between
CA & federal law)
C
Additions
See instructions
(difference between
CA & federal law)
D
Total Amounts
Using CA Law
As If You Were a
CA Resident
(subtract col. B from
col. A; add col. C
to the result)
E
CA Amounts
(income earned or
received as a CA
resident and income
earned or received
from CA sources
as a nonresident)
5125282 290943344071 -290943344071
REV 01/24/23 INTUIT.CG.CFP.SP
175
Side 4 Schedule CA (540NR) 2022 7744224
1
2
3
4
5a
5b
5c
5d
5e
6
7
8a
8b
8c
8d
8e
9
10
11
12
13
14
1 Medical and dental expenses .........................
2 Enter amount from federal Form 1040 or 1040-SR, line 11 . .
3 Multiply line 2 by 7.5% (0.075) .......................
4 Subtract line 3 from line 1. If line 3 is more than line 1, enter 0.....................
5a State and local income tax or general sales taxes. ..............................
5b State and local real estate taxes ............................................
5c State and local personal property taxes ......................................
5d Add line 5a through line 5c................................................
5e Enter the smaller of line 5d or $10,000 ($5,000 if married filing separately) in column A . .
 Enter the amount from line 5a, column B in line 5e, column B ......................
 Enter the difference from line 5d and line 5e, column A in line 5e, column C ...........
6 Other taxes. List type ........................
7 Add line 5e and line 6 ....................................................
8a Home mortgage interest and points reported to you on federal Form 1098 ...........
8b Home mortgage interest not reported to you on federal Form 1098.................
8c Points not reported to you on federal Form 1098...............................
8d Reserved for future use ..................................................
8e Add line 8a through line 8c................................................
9 Investment interest......................................................
10 Add line 8e and line 9 ....................................................
11 Gifts by cash or check ...................................................
12 Other than by cash or check...............................................
13 Carryover from prior year.................................................
14 Add line 11 through line 13 ...............................................
Part III Adjustments to Federal Itemized Deductions
Check the box if you did NOT itemize for federal but will itemize for California ......... A Federal Amounts
(from federal
Schedule A (Form 1040))
B Subtractions
See instructions C Additions
See instructions
Medical and Dental Expenses See instructions.
Taxes You Paid
Interest You Paid
Gifts to Charity
i Attorney fees and court costs you paid in
connection with an award from the IRS for
information you provided that helped the
IRS detect tax law violations ........ 24i
j Housing deduction from federal
Form 2555 ...................... 24j
k Excess deductions of IRC Section 67(e)
expenses from federal Schedule K-1
(Form 1041) .................... 24k
z Other adjustments. List type and amount.
25 Total other adjustments. Add line 24a
through line 24z ..................... 25
26 Add line 11 through line 23 and line 25 in
each column, A through E ............. 26
27 Total. Subtract line 26 from line 10 in each
column, A through E. See instructions .... 27
Section C — Adjustments to Income
 Continued
A
Federal Amounts
(taxable amounts from
your federal tax return)
B
Subtractions
See instructions
(difference between
CA & federal law)
C
Additions
See instructions
(difference between
CA & federal law)
D
Total Amounts
Using CA Law
As If You Were a
CA Resident
(subtract col. B from
col. A; add col. C
to the result)
E
CA Amounts
(income earned or
received as a CA
resident and income
earned or received
from CA sources
as a nonresident)
24z
5125282
5125282
384396
257637118600 257637118600
0
257637118600
10000 257637118600 257637108600
10000 257637118600 257637108600
290943344071 -290943344071
REV 01/24/23 INTUIT.CG.CFP.SP
175
7745224 Schedule CA (540NR) 2022 Side 5
15 Casualty or theft loss(es) (other than net qualified disaster losses).
 Attach federal Form 4684. See instructions ...................................
16 Other—from list in federal instructions ......................................
17 Add lines 4, 7, 10, 14, 15, and 16 in columns A, B, and C ........................
16
17
15
18 Total. Combine line 17 column A less column B plus column C ..................................................
Part III Adjustments to Federal Itemized Deductions
 Continued
A Federal Amounts
(from federal Schedule A
(Form 1040))
B Subtractions
See instructions C Additions
See instructions
Casualty and Theft Losses
Other Itemized Deductions
18
 1 California AGI. Enter your California AGI from Part II, line 27, column E .............................................  1
 2 Enter your deductions from line 30 .......................................................  2
 3 Deduction Percentage. Divide Part II, line 27, column E by Part II, line 27, column D. Carry the decimal
 to four places. If the result is greater than 1.0000, enter 1.0000. If less than zero, enter -0- ...........  3
 4 California Itemized/Standard Deductions. Multiply line 2 by the percentage on line 3 ..................................  4
 5 California Taxable Income. Subtract line 4 from line 1. Transfer this amount to Form 540NR, line 35. If less than
 zero, enter -0- ..........................................................................................  5
Part IV California Taxable Income
29 Is your federal AGI (Form 540NR, line 13) more than the amount shown below for your filing status?
Single or married/RDP filing separately ........................... $229,908
Head of household . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . $344,867
Married/RDP filing jointly or qualifying surviving spouse/RDP.......... $459,821
No. Transfer the amount on line 28 to line 29.
Yes. Complete the Itemized Deductions Worksheet in the instructions for Schedule CA (540NR), line 29 ..................
30 Enter the larger of the amount on line 29 or your standard deduction listed below:
Single or married/RDP filing separately. See instructions................ $5,202
Married/RDP filing jointly, head of household, or qualifying
surviving spouse/RDP ......................................... $10,404 .....................
Job Expenses and Certain Miscellaneous Deductions
19 Unreimbursed employee expenses: job travel, union dues, job education, etc.
 Attach federal Form 2106 if required. See instructions........................
20 Tax preparation fees. .................................................
21 Other expenses: investment, safe deposit box, etc. List type
22 Add line 19 through line 21 ............................................
23 Enter amount from federal Form 1040 or 1040-SR, line 11
24 Multiply line 23 by 2% (0.02). If less than zero, enter 0 .......................
25 Subtract line 24 from line 22. If line 24 is more than line 22, enter 0. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
26 Total Itemized Deductions. Add line 18 and line 25. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
27 Other adjustments. See instructions. Specify. .......
28 Combine line 26 and line 27. .............................................................................





19
20
21
22
24




25
26
27
28
 29
 30
10000 257637118600 257637108600
0
0
0
5125282
102506
0
0
0
0
5202
5202
0 0 0 0 0
0
0
REV 01/24/23 INTUIT.CG.CFP.SP
175
For Privacy Notice, get FTB 1131 EN-SP. 8661224 FTB 3853 2022 Side 1
Health Coverage Exemptions and Individual
Shared Responsibility Penalty
TAXABLE YEAR
2022
CALIFORNIA FORM
3853
Attach to your California Form 540, Form 540NR, or Form 540 2EZ.
Name(s) as shown on your California tax return SSN or ITIN
Part I Applicable Household Members. List all members of your applicable household whether or not they have an exemption or an Exemption
 Certificate Number (ECN) granted by the Marketplace. See instructions.
1
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
2
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
3
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
4
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
5
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
6
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
7
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
8
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
9
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
10
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
11
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
12
First Name Initial SSN Date of Birth (mm/dd/yyyy) Modified AGI
Last Name ECN 1 ECN 2 ECN 3
Part II Coverage Exemption Claimed on Your Tax Return for Your Household
1 If you are claiming a coverage exemption because your applicable household income or gross income is below the filing threshold, check
the box here. See instructions. .............................................................................. □
ZACHRY T WOOD 633-44-1725
ZACHRY T 633-44-1725 10/15/1994 -290,938,218,789.
WOOD
REV 01/24/23 INTUIT.CG.CFP.SP
175
Side 2 FTB 3853 2022 8662224
Part IV Individual Shared Responsibility Penalty
1 Your Individual Shared Responsibility Penalty. Enter on Form 540, line 92; Form 540NR, line 91; or Form 540 2EZ, line 27.
 See instructions ............................................................................... ● 1
Part III Coverage and Exemptions Claimed on Your Tax Return for Individuals. If you and/or a member of your applicable household are reporting
 any coverage or are claiming exemptions for the tax year, complete Part III. See instructions.
Coverage and Exemption Codes
(a)
Full-year
(b)
Jan
(c)
Feb
(d)
Mar
(e)
Apr
(f)
May
(g)
June
(h)
July
(i)
Aug
(j)
Sept
(k)
Oct
(l)
Nov
(m)
Dec
1
First Name Initial
Last Name
2
First Name Initial
Last Name
3
First Name Initial
Last Name
4
First Name Initial
Last Name
5
First Name Initial
Last Name
6
First Name Initial
Last Name
7
First Name Initial
Last Name
8
First Name Initial
Last Name
9
First Name Initial
Last Name
10
First Name Initial
Last Name
11
First Name Initial
Last Name
12
First Name Initial
Last Name
0.
REV 01/24/23 INTUIT.CG.CFP.SP
175
Schedule CA (540NR): California Adjustments
Line 8z - Other Income Continuation Statement
Description Federal Subtractions Additions CA Law CA
Sources
CALIFORNIA VENUES GRANT 290938239071 -290938239071
SMALL BUSINESS COVID RELIEF GRANT 5105000 -5105000
Total 290943344071 -290943344071
ZACHRY T WOOD 633441725 1
Additional Information From 2022 California Tax Return
Form 1040 U.S. Individual Income Tax Return 2022 Department of the Treasury—Internal Revenue Service
OMB No. 1545-0074 IRS Use Only—Do not write or staple in this space.
Filing Status
Check only
one box.
Single Married filing jointly Married filing separately (MFS) Head of household (HOH) Qualifying surviving
spouse (QSS)
If you checked the MFS box, enter the name of your spouse. If you checked the HOH or QSS box, enter the child’s name if the qualifying
person is a child but not your dependent:
Your first name and middle initial Last name Your social security number
If joint return, spouse’s first name and middle initial Last name Spouse’s social security number
Home address (number and street). If you have a P.O. box, see instructions. Apt. no.
City, town, or post office. If you have a foreign address, also complete spaces below. State ZIP code
Foreign country name Foreign province/state/county Foreign postal code
Presidential Election Campaign
Check here if you, or your
spouse if filing jointly, want $3
to go to this fund. Checking a
box below will not change
your tax or refund.
You Spouse
Digital
Assets
At any time during 2022, did you: (a) receive (as a reward, award, or payment for property or services); or (b) sell,
exchange, gift, or otherwise dispose of a digital asset (or a financial interest in a digital asset)? (See instructions.) Yes No
Standard
Deduction
Someone can claim: You as a dependent Your spouse as a dependent
Spouse itemizes on a separate return or you were a dual-status alien
Age/Blindness You: Were born before January 2, 1958 Are blind Spouse: Was born before January 2, 1958 Is blind
Dependents (see instructions):
If more
than four
dependents,
see instructions
and check
here . .
(2) Social security
number
(3) Relationship
to you
(4) Check the box if qualifies for (see instructions):
(1) First name Last name Child tax credit Credit for other dependents
Income
Attach Form(s)
W-2 here. Also
attach Forms
W-2G and
1099-R if tax
was withheld.
If you did not
get a Form
W-2, see
instructions.
1 a Total amount from Form(s) W-2, box 1 (see instructions) ............. 1a
b Household employee wages not reported on Form(s) W-2 ............. 1b
c Tip income not reported on line 1a (see instructions) .............. 1c
d Medicaid waiver payments not reported on Form(s) W-2 (see instructions) ........ 1d
e Taxable dependent care benefits from Form 2441, line 26 ............ 1e
f Employer-provided adoption benefits from Form 8839, line 29 ........... 1f
g Wages from Form 8919, line 6 ..................... 1g
h Other earned income (see instructions) .................. 1h
i Nontaxable combat pay election (see instructions) ....... 1i
z Add lines 1a through 1h ...................... 1z
Attach Sch. B
if required.
2a Tax-exempt interest . . . 2a b Taxable interest ..... 2b
3a Qualified dividends . . . 3a b Ordinary dividends ..... 3b
4a IRA distributions .... 4a b Taxable amount ...... 4b
5a Pensions and annuities . . 5a b Taxable amount ...... 5b
6a Social security benefits . . 6a b Taxable amount ...... 6b
c If you elect to use the lump-sum election method, check here (see instructions) .....
7 Capital gain or (loss). Attach Schedule D if required. If not required, check here ..... 7
8 Other income from Schedule 1, line 10 .................. 8
9 Add lines 1z, 2b, 3b, 4b, 5b, 6b, 7, and 8. This is your total income .......... 9
10 Adjustments to income from Schedule 1, line 26 ............... 10
11 Subtract line 10 from line 9. This is your adjusted gross income .......... 11
Standard
Deduction for—
• Single or
Married filing
separately,
$12,950
• Married filing
jointly or
Qualifying
surviving spouse,
$25,900
• Head of
household,
$19,400
• If you checked
any box under
Standard
Deduction,
see instructions.
12 Standard deduction or itemized deductions (from Schedule A) .......... 12
13 Qualified business income deduction from Form 8995 or Form 8995-A ......... 13
14 Add lines 12 and 13 ........................ 14
15 Subtract line 14 from line 11. If zero or less, enter -0-. This is your taxable income ..... 15
For Disclosure, Privacy Act, and Paperwork Reduction Act Notice, see separate instructions. Form 1040 (2022)
12,950.
12,950.
5,112,332.
WOOD 633-44-1725
5222 Bradford Dr
Dallas TX 752358313
5,125,282.
5,125,282.
5,125,282.
ZACHRY T
Form 1040 (2022) Page 2
Tax and
Credits
16 Tax (see instructions). Check if any from Form(s): 1 8814 2 4972 3 . . 16
17 Amount from Schedule 2, line 3 .................... 17
18 Add lines 16 and 17 . . . . . . . . . . . . . . . . . . . . . . . . 18
19 Child tax credit or credit for other dependents from Schedule 8812 .......... 19
20 Amount from Schedule 3, line 8 .................... 20
21 Add lines 19 and 20 ........................ 21
22 Subtract line 21 from line 18. If zero or less, enter -0- .............. 22
23 Other taxes, including self-employment tax, from Schedule 2, line 21 ......... 23
24 Add lines 22 and 23. This is your total tax ................. 24
Payments 25 Federal income tax withheld from:
a Form(s) W-2 .................. 25a
b Form(s) 1099 .................. 25b
c Other forms (see instructions) ............. 25c
d Add lines 25a through 25c ...................... 25d
26 2022 estimated tax payments and amount applied from 2021 return .......... 26 If you have a
qualifying child,
attach Sch. EIC.
27 Earned income credit (EIC) .............. 27
28 Additional child tax credit from Schedule 8812 ........ 28
29 American opportunity credit from Form 8863, line 8 ....... 29
30 Reserved for future use ............... 30
31 Amount from Schedule 3, line 15 ............ 31
32 Add lines 27, 28, 29, and 31. These are your total other payments and refundable credits . . 32
33 Add lines 25d, 26, and 32. These are your total payments ............ 33
Refund 34 If line 33 is more than line 24, subtract line 24 from line 33. This is the amount you overpaid . . 34
35a Amount of line 34 you want refunded to you. If Form 8888 is attached, check here .... 35a
Direct deposit?
See instructions.
b Routing number c Type: Checking Savings
d Account number
36 Amount of line 34 you want applied to your 2023 estimated tax ... 36
Amount
You Owe
37 Subtract line 33 from line 24. This is the amount you owe.
For details on how to pay, go to www.irs.gov/Payments or see instructions . . . . . . . . 37
38 Estimated tax penalty (see instructions) .......... 38
Third Party
Designee
Do you want to allow another person to discuss this return with the IRS? See
instructions . . . . . . . . . . . . . . . . . . . . . Yes. Complete below. No
Designee’s
name
Phone
no.
Personal identification
number (PIN)
Sign
Here
Joint return?
See instructions.
Keep a copy for
your records.
Under penalties of perjury, I declare that I have examined this return and accompanying schedules and statements, and to the best of my knowledge and
belief, they are true, correct, and complete. Declaration of preparer (other than taxpayer) is based on all information of which preparer has any knowledge.
Your signature Date Your occupation If the IRS sent you an Identity
Protection PIN, enter it here
(see inst.)
Spouse’s signature. If a joint return, both must sign. Date Spouse’s occupation If the IRS sent your spouse an
Identity Protection PIN, enter it here
(see inst.)
Phone no. Email address
Paid
Preparer
Use Only
Preparer’s name Preparer’s signature Date PTIN Check if:
Self-employed
Firm’s name Phone no.
Firm’s address Firm’s EIN
Go to www.irs.gov/Form1040 for instructions and the latest information. Form 1040 (2022)
1,854,518.
1,854,518.
X X X X X X X X X
X X X X X X X X X X X X X X X X X
 Self-Prepared
1,854,518.
44,145.
1,898,663.
(469)905-0682
A'Sync/ISSUE_TEMPLATE/LICENSE.md
1,888,138.
1,888,138.
283,372,863,602.
283,370,964,939.
283,370,964,939.
283,370,975,464.
0.
BAA REV 01/24/23 Intuit.cg.cfp.sp
SCHEDULE 1
(Form 1040) 2022 Additional Income and Adjustments to Income
Department of the Treasury
Internal Revenue Service
Attach to Form 1040, 1040-SR, or 1040-NR.
Go to www.irs.gov/Form1040 for instructions and the latest information.
OMB No. 1545-0074
Attachment
Sequence No. 01
Name(s) shown on Form 1040, 1040-SR, or 1040-NR Your social security number
Part I Additional Income
1 Taxable refunds, credits, or offsets of state and local income taxes ......... 1
2a Alimony received ........................... 2a
b Date of original divorce or separation agreement (see instructions):
3 Business income or (loss). Attach Schedule C ................. 3
4 Other gains or (losses). Attach Form 4797 .................. 4
5 Rental real estate, royalties, partnerships, S corporations, trusts, etc. Attach Schedule E . 5
6 Farm income or (loss). Attach Schedule F ................... 6
7 Unemployment compensation ....................... 7
8 Other income:
a Net operating loss ................... 8a ( )
b Gambling ...................... 8b
c Cancellation of debt .................. 8c
d Foreign earned income exclusion from Form 2555 ....... 8d ( )
e Income from Form 8853 ................. 8e
f Income from Form 8889 ................. 8f
g Alaska Permanent Fund dividends ............. 8g
h Jury duty pay ..................... 8h
i Prizes and awards ................... 8i
j Activity not engaged in for profit income ........... 8j
k Stock options ..................... 8k
l Income from the rental of personal property if you engaged in the rental
for profit but were not in the business of renting such property . . . 8l
m Olympic and Paralympic medals and USOC prize money (see
instructions) ..................... 8m
n Section 951(a) inclusion (see instructions) .......... 8n
o Section 951A(a) inclusion (see instructions) .......... 8o
p Section 461(l) excess business loss adjustment ........ 8p
q Taxable distributions from an ABLE account (see instructions) . . . 8q
r Scholarship and fellowship grants not reported on Form W-2 . . . 8r
s Nontaxable amount of Medicaid waiver payments included on Form
1040, line 1a or 1d ................... 8s ( )
t Pension or annuity from a nonqualifed deferred compensation plan or
a nongovernmental section 457 plan ............ 8t
u Wages earned while incarcerated ............. 8u
z Other income. List type and amount:
8z
9 Total other income. Add lines 8a through 8z .................. 9
10 Combine lines 1 through 7 and 9. Enter here and on Form 1040, 1040-SR, or 1040-NR, line 8 10
For Paperwork Reduction Act Notice, see your tax return instructions. Schedule 1 (Form 1040) 2022
ZACHRY T WOOD 633-44-1725
5,125,282.
5,125,282.
5,125,282.
Schedule 1 (Form 1040) 2022 Page 2
Part II Adjustments to Income
11 Educator expenses ........................... 11
12 Certain business expenses of reservists, performing artists, and fee-basis government
officials. Attach Form 2106 ........................ 12
13 Health savings account deduction. Attach Form 8889 .............. 13
14 Moving expenses for members of the Armed Forces. Attach Form 3903 ....... 14
15 Deductible part of self-employment tax. Attach Schedule SE ........... 15
16 Self-employed SEP, SIMPLE, and qualified plans ................ 16
17 Self-employed health insurance deduction .................. 17
18 Penalty on early withdrawal of savings .................... 18
19a Alimony paid ............................. 19a
b Recipient’s SSN ......................
c Date of original divorce or separation agreement (see instructions):
20 IRA deduction ............................. 20
21 Student loan interest deduction ...................... 21
22 Reserved for future use ......................... 22
23 Archer MSA deduction ......................... 23
24 Other adjustments:
a Jury duty pay (see instructions) .............. 24a
b Deductible expenses related to income reported on line 8l from the
rental of personal property engaged in for profit ........ 24b
c Nontaxable amount of the value of Olympic and Paralympic medals
and USOC prize money reported on line 8m .......... 24c
d Reforestation amortization and expenses ........... 24d
e Repayment of supplemental unemployment benefits under the Trade
Act of 1974 ...................... 24e
f Contributions to section 501(c)(18)(D) pension plans ....... 24f
g Contributions by certain chaplains to section 403(b) plans .... 24g
h Attorney fees and court costs for actions involving certain unlawful
discrimination claims (see instructions) ............ 24h
i Attorney fees and court costs you paid in connection with an award
from the IRS for information you provided that helped the IRS detect
tax law violations ................... 24i
j Housing deduction from Form 2555 ............. 24j
k Excess deductions of section 67(e) expenses from Schedule K-1 (Form
1041) ........................ 24k
z Other adjustments. List type and amount:
24z
25 Total other adjustments. Add lines 24a through 24z ............... 25
26 Add lines 11 through 23 and 25. These are your adjustments to income. Enter here and on
Form 1040 or 1040-SR, line 10, or Form 1040-NR, line 10a ............ 26
BAA REV 01/24/23 Intuit.cg.cfp.sp Schedule 1 (Form 1040) 2022
SCHEDULE 2
(Form 1040)
2022 Additional Taxes
Department of the Treasury
Internal Revenue Service
Attach to Form 1040, 1040-SR, or 1040-NR.
Go to www.irs.gov/Form1040 for instructions and the latest information.
OMB No. 1545-0074
Attachment
Sequence No. 02
Name(s) shown on Form 1040, 1040-SR, or 1040-NR Your social security number
Part I Tax
1 Alternative minimum tax. Attach Form 6251 ................ 1
2 Excess advance premium tax credit repayment. Attach Form 8962 ....... 2
3 Add lines 1 and 2. Enter here and on Form 1040, 1040-SR, or 1040-NR, line 17 . . 3
Part II Other Taxes
4 Self-employment tax. Attach Schedule SE ................. 4
5 Social security and Medicare tax on unreported tip income.
Attach Form 4137 .................. 5
6 Uncollected social security and Medicare tax on wages. Attach
Form 8919 ..................... 6
7 Total additional social security and Medicare tax. Add lines 5 and 6 ...... 7
8 Additional tax on IRAs or other tax-favored accounts. Attach Form 5329 if required.
If not required, check here ..................... 8
9 Household employment taxes. Attach Schedule H ............. 9
10 Repayment of first-time homebuyer credit. Attach Form 5405 if required ..... 10
11 Additional Medicare Tax. Attach Form 8959 ................ 11
12 Net investment income tax. Attach Form 8960 ............... 12
13 Uncollected social security and Medicare or RRTA tax on tips or group-term life
insurance from Form W-2, box 12 .................... 13
14 Interest on tax due on installment income from the sale of certain residential lots
and timeshares ............................ 14
15 Interest on the deferred tax on gain from certain installment sales with a sales price
over $150,000 ............................ 15
16 Recapture of low-income housing credit. Attach Form 8611 .......... 16
(continued on page 2)
For Paperwork Reduction Act Notice, see your tax return instructions. Schedule 2 (Form 1040) 2022
ZACHRY T WOOD 633-44-1725
44,145.
Schedule 2 (Form 1040) 2022 Page 2
Part II Other Taxes (continued)
17 Other additional taxes:
a Recapture of other credits. List type, form number, and amount:
17a
b Recapture of federal mortgage subsidy, if you sold your home
see instructions ................... 17b
c Additional tax on HSA distributions. Attach Form 8889 .... 17c
d Additional tax on an HSA because you didn’t remain an eligible
individual. Attach Form 8889 .............. 17d
e Additional tax on Archer MSA distributions. Attach Form 8853 . 17e
f Additional tax on Medicare Advantage MSA distributions. Attach
Form 8853 ..................... 17f
g Recapture of a charitable contribution deduction related to a
fractional interest in tangible personal property ....... 17g
h Income you received from a nonqualified deferred compensation
plan that fails to meet the requirements of section 409A . . . 17h
i Compensation you received from a nonqualified deferred
compensation plan described in section 457A ....... 17i
j Section 72(m)(5) excess benefits tax ........... 17j
k Golden parachute payments .............. 17k
l Tax on accumulation distribution of trusts ......... 17l
m Excise tax on insider stock compensation from an expatriated
corporation ..................... 17m
n Look-back interest under section 167(g) or 460(b) from Form
8697 or 8866 .................... 17n
o Tax on non-effectively connected income for any part of the
year you were a nonresident alien from Form 1040-NR .... 17o
p Any interest from Form 8621, line 16f, relating to distributions
from, and dispositions of, stock of a section 1291 fund .... 17p
q Any interest from Form 8621, line 24 ........... 17q
z Any other taxes. List type and amount:
17z
18 Total additional taxes. Add lines 17a through 17z .............. 18
19 Reserved for future use ........................ 19
20 Section 965 net tax liability installment from Form 965-A . . . 20
21 Add lines 4, 7 through 16, and 18. These are your total other taxes. Enter here and
on Form 1040 or 1040-SR, line 23, or Form 1040-NR, line 23b ......... 21
Schedule 2 (Form 1040) 2022
44,145.
BAA REV 01/24/23 Intuit.cg.cfp.sp
Form 8959
Department of the Treasury
Internal Revenue Service
Additional Medicare Tax
If any line does not apply to you, leave it blank. See separate instructions.
Attach to Form 1040, 1040-SR, 1040-NR, 1040-PR, or 1040-SS.
Go to www.irs.gov/Form8959 for instructions and the latest information.
OMB No. 1545-0074
2022
Attachment
Sequence No. 71
Name(s) shown on return Your social security number
Part I Additional Medicare Tax on Medicare Wages
1 Medicare wages and tips from Form W-2, box 5. If you have more than one
Form W-2, enter the total of the amounts from box 5 ........ 1
2 Unreported tips from Form 4137, line 6 ............. 2
3 Wages from Form 8919, line 6 ................ 3
4 Add lines 1 through 3 . . . . . . . . . . . . . . . . . . . 4
5 Enter the following amount for your filing status:
Married filing jointly ............... $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 5
6 Subtract line 5 from line 4. If zero or less, enter -0- . . . . . . . . . . . . . . . . . 6
7 Additional Medicare Tax on Medicare wages. Multiply line 6 by 0.9% (0.009). Enter here and go to
Part II ................................ 7
Part II Additional Medicare Tax on Self-Employment Income
8 Self-employment income from Schedule SE (Form 1040), Part I, line 6. If you
had a loss, enter -0- (Form 1040-PR or 1040-SS filers, see instructions.) . . 8
9 Enter the following amount for your filing status:
Married filing jointly................ $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 9
10 Enter the amount from line 4 ................ 10
11 Subtract line 10 from line 9. If zero or less, enter -0- ......... 11
12 Subtract line 11 from line 8. If zero or less, enter -0- ................. 12
13 Additional Medicare Tax on self-employment income. Multiply line 12 by 0.9% (0.009). Enter here and
go to Part III .............................. 13
Part III Additional Medicare Tax on Railroad Retirement Tax Act (RRTA) Compensation
14 Railroad retirement (RRTA) compensation and tips from Form(s) W-2, box 14
(see instructions) . . . . . . . . . . . . . . . . . . . . 14
15 Enter the following amount for your filing status:
Married filing jointly ............... $250,000
Married filing separately .............. $125,000
Single, Head of household, or Qualifying surviving spouse . . . $200,000 15
16 Subtract line 15 from line 14. If zero or less, enter -0- ................ 16
17 Additional Medicare Tax on railroad retirement (RRTA) compensation. Multiply line 16 by 0.9% (0.009).
Enter here and go to Part IV ......................... 17
Part IV Total Additional Medicare Tax
18 Add lines 7, 13, and 17. Also include this amount on Schedule 2 (Form 1040), line 11 (Form 1040-PR
or 1040-SS filers, see instructions), and go to Part V ................. 18
Part V Withholding Reconciliation
19 Medicare tax withheld from Form W-2, box 6. If you have more than one Form
W-2, enter the total of the amounts from box 6 .......... 19
20 Enter the amount from line 1 ................ 20
21 Multiply line 20 by 1.45% (0.0145). This is your regular Medicare tax
withholding on Medicare wages ............... 21
22 Subtract line 21 from line 19. If zero or less, enter -0-. This is your Additional Medicare Tax
withholding on Medicare wages ....................... 22
23 Additional Medicare Tax withholding on railroad retirement (RRTA) compensation from Form W-2, box
14 (see instructions) ........................... 23
24 Total Additional Medicare Tax withholding. Add lines 22 and 23. Also include this amount with
federal income tax withholding on Form 1040, 1040-SR, or 1040-NR, line 25c (Form 1040-PR or
1040-SS filers, see instructions) ....................... 24
For Paperwork Reduction Act Notice, see your tax return instructions. Form 8959 (2022)
0.
0.
ZACHRY T WOOD 633-44-1725
44,145.
200,000.
5,105,000.
5,105,000.
4,905,000.
44,145.
74,023.
0.
5,105,000.
BAA REV 01/24/23 Intuit.cg.cfp.sp
Form 8960
Department of the Treasury
Internal Revenue Service
Net Investment Income Tax—
Individuals, Estates, and Trusts
Attach to your tax return.
Go to www.irs.gov/Form8960 for instructions and the latest information.
OMB No. 1545-2227
2022
Attachment
Sequence No. 72
Name(s) shown on your tax return Your social security number or EIN
Part I Investment Income Section 6013(g) election (see instructions)
Section 6013(h) election (see instructions)
Regulations section 1.1411-10(g) election (see instructions)
1 Taxable interest (see instructions) . . . . . . . . . . . . . . . . . . . . . . . 1
2 Ordinary dividends (see instructions) ...................... 2
3 Annuities (see instructions) ......................... 3
4 a Rental real estate, royalties, partnerships, S corporations, trusts, etc. (see
instructions) ...................... 4a
b Adjustment for net income or loss derived in the ordinary course of a nonsection 1411 trade or business (see instructions) .......... 4b
c Combine lines 4a and 4b .......................... 4c
5a Net gain or loss from disposition of property (see instructions) ..... 5a
b Net gain or loss from disposition of property that is not subject to net
investment income tax (see instructions) ............ 5b
c Adjustment from disposition of partnership interest or S corporation stock (see
instructions) ...................... 5c
d Combine lines 5a through 5c ........................ 5d
6 Adjustments to investment income for certain CFCs and PFICs (see instructions) ....... 6
7 Other modifications to investment income (see instructions) .............. 7
8 Total investment income. Combine lines 1, 2, 3, 4c, 5d, 6, and 7 ............. 8
Part II Investment Expenses Allocable to Investment Income and Modifications
9a Investment interest expenses (see instructions) .......... 9a
b State, local, and foreign income tax (see instructions) ........ 9b
c Miscellaneous investment expenses (see instructions) ........ 9c
d Add lines 9a, 9b, and 9c .......................... 9d
10 Additional modifications (see instructions) .................... 10
11 Total deductions and modifications. Add lines 9d and 10 ............... 11
Part III Tax Computation
12 Net investment income. Subtract Part II, line 11, from Part I, line 8. Individuals, complete lines 13–17.
Estates and trusts, complete lines 18a–21. If zero or less, enter -0- ............ 12
Individuals:
13 Modified adjusted gross income (see instructions) ......... 13
14 Threshold based on filing status (see instructions) ......... 14
15 Subtract line 14 from line 13. If zero or less, enter -0- ........ 15
16 Enter the smaller of line 12 or line 15 ...................... 16
17 Net investment income tax for individuals. Multiply line 16 by 3.8% (0.038). Enter here and include
on your tax return (see instructions) ...................... 17
Estates and Trusts:
18a Net investment income (line 12 above) ............. 18a
b Deductions for distributions of net investment income and deductions under
section 642(c) (see instructions) ............... 18b
c Undistributed net investment income. Subtract line 18b from line 18a (see
instructions). If zero or less, enter -0- ............. 18c
19a Adjusted gross income (see instructions) ............ 19a
b Highest tax bracket for estates and trusts for the year (see instructions) . . 19b
c Subtract line 19b from line 19a. If zero or less, enter -0- ....... 19c
20 Enter the smaller of line 18c or line 19c ..................... 20
21 Net investment income tax for estates and trusts. Multiply line 20 by 3.8% (0.038). Enter here and
include on your tax return (see instructions) ................... 21
For Paperwork Reduction Act Notice, see your tax return instructions. Form 8960 (2022)
200,000.
4,925,282.
0.
0.
0.
ZACHRY T WOOD 633-44-1725
5,125,282.
BAA REV 01/24/23 Intuit.cg.cfp.sp@zw
@laanwj
zw authored and laanwj committed on Aug 18, 2014 
1 parent 84efe0e commit 221684c7effa194d2c409622056f613c894adef5
Showing 1 changed file with 1 addition and 1 deletion.
  2  
src/rpcrawtransaction.cpp
// Copyright (c) 2010 Satoshi Nakamoto
// Copyright (c) 2009-2014 The Bitcoin developers
// Distributed under the MIT/X11 software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.
#include "base58.h"
#include "core.h"
#include "init.h"
#include "keystore.h"
#include "main.h"
#include "net.h"
#include "rpcserver.h"
#include "uint256.h"
#ifdef ENABLE_WALLET
#include "wallet.h"
#endif
#include <stdint.h>
#include <boost/assign/list_of.hpp>
#include "json/json_spirit_utils.h"
#include "json/json_spirit_value.h"
using namespace std;
using namespace boost;
using namespace boost::assign;
using namespace json_spirit;
void ScriptPubKeyToJSON(const CScript& scriptPubKey, Object& out, bool fIncludeHex)
{
    txnouttype type;
    vector<CTxDestination> addresses;
    int nRequired;
    out.push_back(Pair("asm", scriptPubKey.ToString()));
    if (fIncludeHex)
        out.push_back(Pair("hex", HexStr(scriptPubKey.begin(), scriptPubKey.end())));
    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired))
    {
        out.push_back(Pair("type", GetTxnOutputType(type)));
        return;
    }
    out.push_back(Pair("reqSigs", nRequired));
    out.push_back(Pair("type", GetTxnOutputType(type)));
    Array a;
    BOOST_FOREACH(const CTxDestination& addr, addresses)
        a.push_back(CBitcoinAddress(addr).ToString());
    out.push_back(Pair("addresses", a));
}
void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)
{
    entry.push_back(Pair("txid", tx.GetHash().GetHex()));
    entry.push_back(Pair("version", tx.nVersion));
    entry.push_back(Pair("locktime", (int64_t)tx.nLockTime));
    Array vin;
    BOOST_FOREACH(const CTxIn& txin, tx.vin)
    {
        Object in;
        if (tx.IsCoinBase())
            in.push_back(Pair("coinbase", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
        else
        {
            in.push_back(Pair("txid", txin.prevout.hash.GetHex()));
            in.push_back(Pair("vout", (int64_t)txin.prevout.n));
            Object o;
            o.push_back(Pair("asm", txin.scriptSig.ToString()));
            o.push_back(Pair("hex", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));
            in.push_back(Pair("scriptSig", o));
        }
        in.push_back(Pair("sequence", (int64_t)txin.nSequence));
        vin.push_back(in);
    }
    entry.push_back(Pair("vin", vin));
    Array vout;
    for (unsigned int i = 0; i < tx.vout.size(); i++)
    {
        const CTxOut& txout = tx.vout[i];
        Object out;
        out.push_back(Pair("value", ValueFromAmount(txout.nValue)));
        out.push_back(Pair("n", (int64_t)i));
        Object o;
        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);
        out.push_back(Pair("scriptPubKey", o));
        vout.push_back(out);
    }
    entry.push_back(Pair("vout", vout));
    if (hashBlock != 0)
    {
        entry.push_back(Pair("blockhash", hashBlock.GetHex()));
        map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.find(hashBlock);
        if (mi != mapBlockIndex.end() && (*mi).second)
        {
            CBlockIndex* pindex = (*mi).second;
            if (chainActive.Contains(pindex))
            {
                entry.push_back(Pair("confirmations", 1 + chainActive.Height() - pindex->nHeight));
                entry.push_back(Pair("time", (int64_t)pindex->nTime));
                entry.push_back(Pair("blocktime", (int64_t)pindex->nTime));
            }
            else
                entry.push_back(Pair("confirmations", 0));
        }
    }
}
Value getrawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() < 1 || params.size() > 2)
        throw runtime_error(
            "getrawtransaction \"txid\" ( verbose )\n"
            "\nReturn the raw transaction data.\n"
            "\nIf verbose=0, returns a string that is serialized, hex-encoded data for 'txid'.\n"
            "If verbose is non-zero, returns an Object with information about 'txid'.\n"
            "\nArguments:\n"
            "1. \"txid\"      (string, required) The transaction id\n"
            "2. verbose       (numeric, optional, default=0) If 0, return a string, other return a json object\n"
            "\nResult (if verbose is not set or set to 0):\n"
            "\"data\"      (string) The serialized, hex-encoded data for 'txid'\n"
            "\nResult (if verbose > 0):\n"
            "{\n"
            "  \"hex\" : \"data\",       (string) The serialized, hex-encoded data for 'txid'\n"
            "  \"txid\" : \"id\",        (string) The transaction id (same as provided)\n"
            "  \"version\" : n,          (numeric) The version\n"
            "  \"locktime\" : ttt,       (numeric) The lock time\n"
            "  \"vin\" : [               (array of json objects)\n"
            "     {\n"
            "       \"txid\": \"id\",    (string) The transaction id\n"
            "       \"vout\": n,         (numeric) \n"
            "       \"scriptSig\": {     (json object) The script\n"
            "         \"asm\": \"asm\",  (string) asm\n"
            "         \"hex\": \"hex\"   (string) hex\n"
            "       },\n"
            "       \"sequence\": n      (numeric) The script sequence number\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "  \"vout\" : [              (array of json objects)\n"
            "     {\n"
            "       \"value\" : x.xxx,            (numeric) The value in btc\n"
            "       \"n\" : n,                    (numeric) index\n"
            "       \"scriptPubKey\" : {          (json object)\n"
            "         \"asm\" : \"asm\",          (string) the asm\n"
            "         \"hex\" : \"hex\",          (string) the hex\n"
            "         \"reqSigs\" : n,            (numeric) The required sigs\n"
            "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
            "         \"addresses\" : [           (json array of string)\n"
            "           \"bitcoinaddress\"        (string) bitcoin address\n"
            "           ,...\n"
            "         ]\n"
            "       }\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "  \"blockhash\" : \"hash\",   (string) the block hash\n"
            "  \"confirmations\" : n,      (numeric) The confirmations\n"
            "  \"time\" : ttt,             (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT)\n"
            "  \"blocktime\" : ttt         (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\n"
            "}\n"
            "\nExamples:\n"
            + HelpExampleCli("getrawtransaction", "\"mytxid\"")
            + HelpExampleCli("getrawtransaction", "\"mytxid\" 1")
            + HelpExampleRpc("getrawtransaction", "\"mytxid\", 1")
        );
    uint256 hash = ParseHashV(params[0], "parameter 1");
    bool fVerbose = false;
    if (params.size() > 1)
        fVerbose = (params[1].get_int() != 0);
    CTransaction tx;
    uint256 hashBlock = 0;
    if (!GetTransaction(hash, tx, hashBlock, true))
        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "No information available about transaction");
    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
    ssTx << tx;
    string strHex = HexStr(ssTx.begin(), ssTx.end());
    if (!fVerbose)
        return strHex;
    Object result;
    result.push_back(Pair("hex", strHex));
    TxToJSON(tx, hashBlock, result);
    return result;
}
#ifdef ENABLE_WALLET
Value listunspent(const Array& params, bool fHelp)
{
    if (fHelp || params.size() > 3)
        throw runtime_error(
            "listunspent ( minconf maxconf  [\"address\",...] )\n"
            "\nReturns array of unspent transaction outputs\n"
            "with between minconf and maxconf (inclusive) confirmations.\n"
            "Optionally filter to only include txouts paid to specified addresses.\n"
            "Results are an array of Objects, each of which has:\n"
            "{txid, vout, scriptPubKey, amount, confirmations}\n"
            "\nArguments:\n"
            "1. minconf          (numeric, optional, default=1) The minimum confirmationsi to filter\n"
            "2. maxconf          (numeric, optional, default=9999999) The maximum confirmations to filter\n"
            "3. \"addresses\"    (string) A json array of bitcoin addresses to filter\n"
            "    [\n"
            "      \"address\"   (string) bitcoin address\n"
            "      ,...\n"
            "    ]\n"
            "\nResult\n"
            "[                   (array of json object)\n"
            "  {\n"
            "    \"txid\" : \"txid\",        (string) the transaction id \n"
            "    \"vout\" : n,               (numeric) the vout value\n"
            "    \"address\" : \"address\",  (string) the bitcoin address\n"
            "    \"account\" : \"account\",  (string) The associated account, or \"\" for the default account\n"
            "    \"scriptPubKey\" : \"key\", (string) the script key\n"
            "    \"amount\" : x.xxx,         (numeric) the transaction amount in btc\n"
            "    \"confirmations\" : n       (numeric) The number of confirmations\n"
            "  }\n"
            "  ,...\n"
            "]\n"
            "\nExamples\n"
            + HelpExampleCli("listunspent", "")
            + HelpExampleCli("listunspent", "6 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
            + HelpExampleRpc("listunspent", "6, 9999999 \"[\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\",\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\"]\"")
        );
    RPCTypeCheck(params, list_of(int_type)(int_type)(array_type));
    int nMinDepth = 1;
    if (params.size() > 0)
        nMinDepth = params[0].get_int();
    int nMaxDepth = 9999999;
    if (params.size() > 1)
        nMaxDepth = params[1].get_int();
    set<CBitcoinAddress> setAddress;
    if (params.size() > 2)
    {
        Array inputs = params[2].get_array();
        BOOST_FOREACH(Value& input, inputs)
        {
            CBitcoinAddress address(input.get_str());
            if (!address.IsValid())
                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+input.get_str());
            if (setAddress.count(address))
                throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+input.get_str());
           setAddress.insert(address);
        }
    }
    Array results;
    vector<COutput> vecOutputs;
    assert(pwalletMain != NULL);
    pwalletMain->AvailableCoins(vecOutputs, false);
    BOOST_FOREACH(const COutput& out, vecOutputs)
    {
        if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)
            continue;
        if (setAddress.size())
        {
            CTxDestination address;
            if (!ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
                continue;
            if (!setAddress.count(address))
                continue;
        }
        int64_t nValue = out.tx->vout[out.i].nValue;
        const CScript& pk = out.tx->vout[out.i].scriptPubKey;
        Object entry;
        entry.push_back(Pair("txid", out.tx->GetHash().GetHex()));
        entry.push_back(Pair("vout", out.i));
        CTxDestination address;
        if (ExtractDestination(out.tx->vout[out.i].scriptPubKey, address))
        {
            entry.push_back(Pair("address", CBitcoinAddress(address).ToString()));
            if (pwalletMain->mapAddressBook.count(address))
                entry.push_back(Pair("account", pwalletMain->mapAddressBook[address].name));
        }
        entry.push_back(Pair("scriptPubKey", HexStr(pk.begin(), pk.end())));
        if (pk.IsPayToScriptHash())
        {
            CTxDestination address;
            if (ExtractDestination(pk, address))
            {
                const CScriptID& hash = boost::get<const CScriptID&>(address);
                CScript redeemScript;
                if (pwalletMain->GetCScript(hash, redeemScript))
                    entry.push_back(Pair("redeemScript", HexStr(redeemScript.begin(), redeemScript.end())));
            }
        }
        entry.push_back(Pair("amount",ValueFromAmount(nValue)));
        entry.push_back(Pair("confirmations",out.nDepth));
        results.push_back(entry);
    }
    return results;
}
#endif
Value createrawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() != 2)
        throw runtime_error(
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...}\n"
            "\nCreate a transaction spending the given inputs and sending to the given addresses.\n"
            "Returns hex-encoded raw transaction.\n"
            "Note that the transaction's inputs are not signed, and\n"
            "it is not stored in the wallet or transmitted to the network.\n"
            "\nArguments:\n"
            "1. \"transactions\"        (string, required) A json array of json objects\n"
            "     [\n"
            "       {\n"
            "         \"txid\":\"id\",  (string, required) The transaction id\n"
            "         \"vout\":n        (numeric, required) The output number\n"
            "       }\n"
            "       ,...\n"
            "     ]\n"
            "2. \"addresses\"           (string, required) a json object with addresses as keys and amounts as values\n"
            "    {\n"
            "      \"address\": x.xxx   (numeric, required) The key is the bitcoin address, the value is the btc amount\n"
            "      ,...\n"
            "    }\n"
            "\nResult:\n"
            "\"transaction\"            (string) hex string of the transaction\n"
            "\nExamples\n"
            + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\" \"{\\\"address\\\":0.01}\"")
            + HelpExampleRpc("createrawtransaction", "\"[{\\\"txid\\\":\\\"myid\\\",\\\"vout\\\":0}]\", \"{\\\"address\\\":0.01}\"")
        );
    RPCTypeCheck(params, list_of(array_type)(obj_type));
    Array inputs = params[0].get_array();
    Object sendTo = params[1].get_obj();
    CTransaction rawTx;
    BOOST_FOREACH(const Value& input, inputs)
    {
        const Object& o = input.get_obj();
        uint256 txid = ParseHashO(o, "txid");
        const Value& vout_v = find_value(o, "vout");
        if (vout_v.type() != int_type)
            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, missing vout key");
        int nOutput = vout_v.get_int();
        if (nOutput < 0)
            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid parameter, vout must be positive");
        CTxIn in(COutPoint(txid, nOutput));
        rawTx.vin.push_back(in);
    }
    set<CBitcoinAddress> setAddress;
    BOOST_FOREACH(const Pair& s, sendTo)
    {
        CBitcoinAddress address(s.name_);
        if (!address.IsValid())
            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string("Invalid Bitcoin address: ")+s.name_);
        if (setAddress.count(address))
            throw JSONRPCError(RPC_INVALID_PARAMETER, string("Invalid parameter, duplicated address: ")+s.name_);
        setAddress.insert(address);
        CScript scriptPubKey;
        scriptPubKey.SetDestination(address.Get());
        int64_t nAmount = AmountFromValue(s.value_);
        CTxOut out(nAmount, scriptPubKey);
        rawTx.vout.push_back(out);
    }
    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);
    ss << rawTx;
    return HexStr(ss.begin(), ss.end());
}
Value decoderawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() != 1)
        throw runtime_error(
            "decoderawtransaction \"hexstring\"\n"
            "\nReturn a JSON object representing the serialized, hex-encoded transaction.\n"
            "\nArguments:\n"
            "1. \"hex\"      (string, required) The transaction hex string\n"
            "\nResult:\n"
            "{\n"
            "  \"txid\" : \"id\",        (string) The transaction id\n"
            "  \"version\" : n,          (numeric) The version\n"
            "  \"locktime\" : ttt,       (numeric) The lock time\n"
            "  \"vin\" : [               (array of json objects)\n"
            "     {\n"
            "       \"txid\": \"id\",    (string) The transaction id\n"
            "       \"vout\": n,         (numeric) The output number\n"
            "       \"scriptSig\": {     (json object) The script\n"
            "         \"asm\": \"asm\",  (string) asm\n"
            "         \"hex\": \"hex\"   (string) hex\n"
            "       },\n"
            "       \"sequence\": n     (numeric) The script sequence number\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "  \"vout\" : [             (array of json objects)\n"
            "     {\n"
            "       \"value\" : x.xxx,            (numeric) The value in btc\n"
            "       \"n\" : n,                    (numeric) index\n"
            "       \"scriptPubKey\" : {          (json object)\n"
            "         \"asm\" : \"asm\",          (string) the asm\n"
            "         \"hex\" : \"hex\",          (string) the hex\n"
            "         \"reqSigs\" : n,            (numeric) The required sigs\n"
            "         \"type\" : \"pubkeyhash\",  (string) The type, eg 'pubkeyhash'\n"
            "         \"addresses\" : [           (json array of string)\n"
            "           \"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\"   (string) bitcoin address\n"
            "           ,...\n"
            "         ]\n"
            "       }\n"
            "     }\n"
            "     ,...\n"
            "  ],\n"
            "}\n"
            "\nExamples:\n"
            + HelpExampleCli("decoderawtransaction", "\"hexstring\"")
            + HelpExampleRpc("decoderawtransaction", "\"hexstring\"")
        );
    vector<unsigned char> txData(ParseHexV(params[0], "argument"));
    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
    CTransaction tx;
    try {
        ssData >> tx;
    }
    catch (std::exception &e) {
        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
    }
    Object result;
    TxToJSON(tx, 0, result);
    return result;
}
Value decodescript(const Array& params, bool fHelp)
{
    if (fHelp || params.size() != 1)
        throw runtime_error(
            "decodescript \"hex\"\n"
            "\nDecode a hex-encoded script.\n"
            "\nArguments:\n"
            "1. \"hex\"     (string) the hex encoded script\n"
            "\nResult:\n"
            "{\n"
            "  \"asm\":\"asm\",   (string) Script public key\n"
            "  \"hex\":\"hex\",   (string) hex encoded public key\n"
            "  \"type\":\"type\", (string) The output type\n"
            "  \"reqSigs\": n,    (numeric) The required signatures\n"
            "  \"addresses\": [   (json array of string)\n"
            "     \"address\"     (string) bitcoin address\n"
            "     ,...\n"
            "  ],\n"
            "  \"p2sh\",\"address\" (string) script address\n"
            "}\n"
            "\nExamples:\n"
            + HelpExampleCli("decodescript", "\"hexstring\"")
            + HelpExampleRpc("decodescript", "\"hexstring\"")
        );
    RPCTypeCheck(params, list_of(str_type));
    Object r;
    CScript script;
    if (params[0].get_str().size() > 0){
        vector<unsigned char> scriptData(ParseHexV(params[0], "argument"));
        script = CScript(scriptData.begin(), scriptData.end());
    } else {
        // Empty scripts are valid
    }
    ScriptPubKeyToJSON(script, r, false);
    r.push_back(Pair("p2sh", CBitcoinAddress(script.GetID()).ToString()));
    return r;
}
Value signrawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() < 1 || params.size() > 4)
        throw runtime_error(
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )\n"
            "\nSign inputs for raw transaction (serialized, hex-encoded).\n"
            "The second optional argument (may be null) is an array of previous transaction outputs that\n"
            "this transaction depends on but may not yet be in the block chain.\n"
            "The third optional argument (may be null) is an array of base58-encoded private\n"
            "keys that, if given, will be the only keys used to sign the transaction.\n"
#ifdef ENABLE_WALLET
            + HelpRequiringPassphrase() + "\n"
#endif
            "\nArguments:\n"
            "1. \"hexstring\"     (string, required) The transaction hex string\n"
            "2. \"prevtxs\"       (string, optional) An json array of previous dependent transaction outputs\n"
            "     [               (json array of json objects, or 'null' if none provided)\n"
            "       {\n"
            "         \"txid\":\"id\",             (string, required) The transaction id\n"
            "         \"vout\":n,                  (numeric, required) The output number\n"
            "         \"scriptPubKey\": \"hex\",   (string, required) script key\n"
            "         \"redeemScript\": \"hex\"    (string, required) redeem script\n"
            "         \"redeemScript\": \"hex\"    (string, required for P2SH) redeem script\n"
            "       }\n"
            "       ,...\n"
            "    ]\n"
            "3. \"privatekeys\"     (string, optional) A json array of base58-encoded private keys for signing\n"
            "    [                  (json array of strings, or 'null' if none provided)\n"
            "      \"privatekey\"   (string) private key in base58-encoding\n"
            "      ,...\n"
            "    ]\n"
            "4. \"sighashtype\"     (string, optional, default=ALL) The signature hash type. Must be one of\n"
            "       \"ALL\"\n"
            "       \"NONE\"\n"
            "       \"SINGLE\"\n"
            "       \"ALL|ANYONECANPAY\"\n"
            "       \"NONE|ANYONECANPAY\"\n"
            "       \"SINGLE|ANYONECANPAY\"\n"
            "\nResult:\n"
            "{\n"
            "  \"hex\": \"value\",   (string) The raw transaction with signature(s) (hex-encoded string)\n"
            "  \"complete\": n       (numeric) if transaction has a complete set of signature (0 if not)\n"
            "}\n"
            "\nExamples:\n"
            + HelpExampleCli("signrawtransaction", "\"myhex\"")
            + HelpExampleRpc("signrawtransaction", "\"myhex\"")
        );
    RPCTypeCheck(params, list_of(str_type)(array_type)(array_type)(str_type), true);
    vector<unsigned char> txData(ParseHexV(params[0], "argument 1"));
    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
    vector<CTransaction> txVariants;
    while (!ssData.empty())
    {
        try {
            CTransaction tx;
            ssData >> tx;
            txVariants.push_back(tx);
        }
        catch (std::exception &e) {
            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
        }
    }
    if (txVariants.empty())
        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "Missing transaction");
    // mergedTx will end up with all the signatures; it
    // starts as a clone of the rawtx:
    CTransaction mergedTx(txVariants[0]);
    bool fComplete = true;
    // Fetch previous transactions (inputs):
    CCoinsView viewDummy;
    CCoinsViewCache view(viewDummy);
    {
        LOCK(mempool.cs);
        CCoinsViewCache &viewChain = *pcoinsTip;
        CCoinsViewMemPool viewMempool(viewChain, mempool);
        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view
        BOOST_FOREACH(const CTxIn& txin, mergedTx.vin) {
            const uint256& prevHash = txin.prevout.hash;
            CCoins coins;
            view.GetCoins(prevHash, coins); // this is certainly allowed to fail
        }
        view.SetBackend(viewDummy); // switch back to avoid locking mempool for too long
    }
    bool fGivenKeys = false;
    CBasicKeyStore tempKeystore;
    if (params.size() > 2 && params[2].type() != null_type)
    {
        fGivenKeys = true;
        Array keys = params[2].get_array();
        BOOST_FOREACH(Value k, keys)
        {
            CBitcoinSecret vchSecret;
            bool fGood = vchSecret.SetString(k.get_str());
            if (!fGood)
                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, "Invalid private key");
            CKey key = vchSecret.GetKey();
            tempKeystore.AddKey(key);
        }
    }
#ifdef ENABLE_WALLET
    else
        EnsureWalletIsUnlocked();
#endif
    // Add previous txouts given in the RPC call:
    if (params.size() > 1 && params[1].type() != null_type)
    {
        Array prevTxs = params[1].get_array();
        BOOST_FOREACH(Value& p, prevTxs)
        {
            if (p.type() != obj_type)
                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "expected object with {\"txid'\",\"vout\",\"scriptPubKey\"}");
            Object prevOut = p.get_obj();
            RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type));
            uint256 txid = ParseHashO(prevOut, "txid");
            int nOut = find_value(prevOut, "vout").get_int();
            if (nOut < 0)
                throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "vout must be positive");
            vector<unsigned char> pkData(ParseHexO(prevOut, "scriptPubKey"));
            CScript scriptPubKey(pkData.begin(), pkData.end());
            CCoins coins;
            if (view.GetCoins(txid, coins)) {
                if (coins.IsAvailable(nOut) && coins.vout[nOut].scriptPubKey != scriptPubKey) {
                    string err("Previous output scriptPubKey mismatch:\n");
                    err = err + coins.vout[nOut].scriptPubKey.ToString() + "\nvs:\n"+
                        scriptPubKey.ToString();
                    throw JSONRPCError(RPC_DESERIALIZATION_ERROR, err);
                }
                // what todo if txid is known, but the actual output isn't?
            }
            if ((unsigned int)nOut >= coins.vout.size())
                coins.vout.resize(nOut+1);
            coins.vout[nOut].scriptPubKey = scriptPubKey;
            coins.vout[nOut].nValue = 0; // we don't know the actual output value
            view.SetCoins(txid, coins);
            // if redeemScript given and not using the local wallet (private keys
            // given), add redeemScript to the tempKeystore so it can be signed:
            if (fGivenKeys && scriptPubKey.IsPayToScriptHash())
            {
                RPCTypeCheck(prevOut, map_list_of("txid", str_type)("vout", int_type)("scriptPubKey", str_type)("redeemScript",str_type));
                Value v = find_value(prevOut, "redeemScript");
                if (!(v == Value::null))
                {
                    vector<unsigned char> rsData(ParseHexV(v, "redeemScript"));
                    CScript redeemScript(rsData.begin(), rsData.end());
                    tempKeystore.AddCScript(redeemScript);
                }
            }
        }
    }
#ifdef ENABLE_WALLET
    const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);
#else
    const CKeyStore& keystore = tempKeystore;
#endif
    int nHashType = SIGHASH_ALL;
    if (params.size() > 3 && params[3].type() != null_type)
    {
        static map<string, int> mapSigHashValues =
            boost::assign::map_list_of
            (string("ALL"), int(SIGHASH_ALL))
            (string("ALL|ANYONECANPAY"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY))
            (string("NONE"), int(SIGHASH_NONE))
            (string("NONE|ANYONECANPAY"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY))
            (string("SINGLE"), int(SIGHASH_SINGLE))
            (string("SINGLE|ANYONECANPAY"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY))
            ;
        string strHashType = params[3].get_str();
        if (mapSigHashValues.count(strHashType))
            nHashType = mapSigHashValues[strHashType];
        else
            throw JSONRPCError(RPC_INVALID_PARAMETER, "Invalid sighash param");
    }
    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);
    // Sign what we can:
    for (unsigned int i = 0; i < mergedTx.vin.size(); i++)
    {
        CTxIn& txin = mergedTx.vin[i];
        CCoins coins;
        if (!view.GetCoins(txin.prevout.hash, coins) || !coins.IsAvailable(txin.prevout.n))
        {
            fComplete = false;
            continue;
        }
        const CScript& prevPubKey = coins.vout[txin.prevout.n].scriptPubKey;
        txin.scriptSig.clear();
        // Only sign SIGHASH_SINGLE if there's a corresponding output:
        if (!fHashSingle || (i < mergedTx.vout.size()))
            SignSignature(keystore, prevPubKey, mergedTx, i, nHashType);
        // ... and merge in other signatures:
        BOOST_FOREACH(const CTransaction& txv, txVariants)
        {
            txin.scriptSig = CombineSignatures(prevPubKey, mergedTx, i, txin.scriptSig, txv.vin[i].scriptSig);
        }
        if (!VerifyScript(txin.scriptSig, prevPubKey, mergedTx, i, SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC, 0))
            fComplete = false;
    }
    Object result;
    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);
    ssTx << mergedTx;
    result.push_back(Pair("hex", HexStr(ssTx.begin(), ssTx.end())));
    result.push_back(Pair("complete", fComplete));
    return result;
}
Value sendrawtransaction(const Array& params, bool fHelp)
{
    if (fHelp || params.size() < 1 || params.size() > 2)
        throw runtime_error(
            "sendrawtransaction \"hexstring\" ( allowhighfees )\n"
            "\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\n"
            "\nAlso see createrawtransaction and signrawtransaction calls.\n"
            "\nArguments:\n"
            "1. \"hexstring\"    (string, required) The hex string of the raw transaction)\n"
            "2. allowhighfees    (boolean, optional, default=false) Allow high fees\n"
            "\nResult:\n"
            "\"hex\"             (string) The transaction hash in hex\n"
            "\nExamples:\n"
            "\nCreate a transaction\n"
            + HelpExampleCli("createrawtransaction", "\"[{\\\"txid\\\" : \\\"mytxid\\\",\\\"vout\\\":0}]\" \"{\\\"myaddress\\\":0.01}\"") +
            "Sign the transaction, and get back the hex\n"
            + HelpExampleCli("signrawtransaction", "\"myhex\"") +
            "\nSend the transaction (signed hex)\n"
            + HelpExampleCli("sendrawtransaction", "\"signedhex\"") +
            "\nAs a json rpc call\n"
            + HelpExampleRpc("sendrawtransaction", "\"signedhex\"")
        );
    // parse hex string from parameter
    vector<unsigned char> txData(ParseHexV(params[0], "parameter"));
    CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);
    CTransaction tx;
    bool fOverrideFees = false;
    if (params.size() > 1)
        fOverrideFees = params[1].get_bool();
    // deserialize binary data stream
    try {
        ssData >> tx;
    }
    catch (std::exception &e) {
        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, "TX decode failed");
    }
    uint256 hashTx = tx.GetHash();
    CCoinsViewCache &view = *pcoinsTip;
    CCoins existingCoins;
    bool fHaveMempool = mempool.exists(hashTx);
    bool fHaveChain = view.GetCoins(hashTx, existingCoins) && existingCoins.nHeight < 1000000000;
    if (!fHaveMempool && !fHaveChain) {
        // push to local node and sync with wallets
        CValidationState state;
        if (AcceptToMemoryPool(mempool, state, tx, false, NULL, !fOverrideFees))
            SyncWithWallets(hashTx, tx, NULL);
        else {
            if(state.IsInvalid())
                throw JSONRPCError(RPC_TRANSACTION_REJECTED, strprintf("%i: %s", state.GetRejectCode(), state.GetRejectReason()));
            else
                throw JSONRPCError(RPC_TRANSACTION_ERROR, state.GetRejectReason());
        }
    } else if (fHaveChain) {
        throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, "transaction already in block chain");
    }
    RelayTransaction(tx, hashTx);
    return hashTx.GetHex();
}
'require'/ ':'' 'test'' :
  '- '.devcontainer/**'
 - '.github/actions-scripts/**'
 - '.github/workflows/**'
 - '.github/CODEOWNERS'
 - 'assets/fonts/**'
 - 'data/graphql/**'
 - 'Dockerfile*'
 - 'lib/graphql/**'
 - 'lib/redirects/**'
 - 'lib/rest/**'
 - 'lib/webhooks/**'
 - 'package*.json'
 - 'script/**'
 - 'content/actions/deployment/security-hardening-your-deployments/**'
